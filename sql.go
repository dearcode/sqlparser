// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import (
	"fmt"
)

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// forceEOF forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling forceEOF will make the lexer
// return EOF early.
func forceEOF(yylex interface{}) {
	yylex.(*Tokenizer).ForceEOF = true
}

//line sql.y:57
type yySymType struct {
	yys               int
	empty             struct{}
	statement         Statement
	selStmt           SelectStatement
	ddl               *DDL
	ins               *Insert
	byt               byte
	bytes             []byte
	bytes2            [][]byte
	str               string
	strs              []string
	selectExprs       SelectExprs
	selectExpr        SelectExpr
	columns           Columns
	partitions        Partitions
	colName           *ColName
	tableExprs        TableExprs
	tableExpr         TableExpr
	joinCondition     JoinCondition
	tableName         TableName
	tableNames        TableNames
	indexHints        *IndexHints
	expr              Expr
	exprs             Exprs
	boolVal           BoolVal
	colTuple          ColTuple
	values            Values
	valTuple          ValTuple
	subquery          *Subquery
	whens             []*When
	when              *When
	orderBy           OrderBy
	order             *Order
	limit             *Limit
	updateExprs       UpdateExprs
	setExprs          SetExprs
	updateExpr        *UpdateExpr
	setExpr           *SetExpr
	colIdent          ColIdent
	tableIdent        TableIdent
	convertType       *ConvertType
	aliasedTableName  *AliasedTableExpr
	TableSpec         *TableSpec
	columnOption      columnOption
	columnOptions     []columnOption
	TableOption       TableOption
	columnType        ColumnType
	colKeyOpt         ColumnKeyOption
	optVal            *SQLVal
	LengthScaleOption LengthScaleOption
	columnDefinition  *ColumnDefinition
	indexDefinition   *IndexDefinition
	indexInfo         *IndexInfo
	indexColumn       *IndexColumn
	indexColumns      []*IndexColumn
	partDefs          []*PartitionDefinition
	partDef           *PartitionDefinition
	partSpec          *PartitionSpec
	vindexParam       VindexParam
	vindexParams      []VindexParam
	ForeignOptionList []ForeignOption
	ForeignOption     ForeignOption
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const INSERT = 57349
const UPDATE = 57350
const DELETE = 57351
const FROM = 57352
const WHERE = 57353
const GROUP = 57354
const HAVING = 57355
const ORDER = 57356
const BY = 57357
const LIMIT = 57358
const OFFSET = 57359
const FOR = 57360
const ALL = 57361
const DISTINCT = 57362
const AS = 57363
const EXISTS = 57364
const ASC = 57365
const DESC = 57366
const INTO = 57367
const DUPLICATE = 57368
const KEY = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const KEYS = 57373
const VALUES = 57374
const LAST_INSERT_ID = 57375
const NEXT = 57376
const VALUE = 57377
const SHARE = 57378
const MODE = 57379
const SQL_NO_CACHE = 57380
const SQL_CACHE = 57381
const JOIN = 57382
const STRAIGHT_JOIN = 57383
const LEFT = 57384
const RIGHT = 57385
const INNER = 57386
const OUTER = 57387
const CROSS = 57388
const NATURAL = 57389
const USE = 57390
const FORCE = 57391
const ON = 57392
const USING = 57393
const HEX = 57394
const STRING = 57395
const INTEGRAL = 57396
const FLOAT = 57397
const HEXNUM = 57398
const VALUE_ARG = 57399
const LIST_ARG = 57400
const COMMENT = 57401
const COMMENT_KEYWORD = 57402
const BIT_LITERAL = 57403
const NULL = 57404
const TRUE = 57405
const FALSE = 57406
const OR = 57407
const AND = 57408
const NOT = 57409
const BETWEEN = 57410
const CASE = 57411
const WHEN = 57412
const THEN = 57413
const ELSE = 57414
const END = 57415
const LE = 57416
const GE = 57417
const NE = 57418
const NULL_SAFE_EQUAL = 57419
const IS = 57420
const LIKE = 57421
const REGEXP = 57422
const IN = 57423
const SHIFT_LEFT = 57424
const SHIFT_RIGHT = 57425
const DIV = 57426
const MOD = 57427
const UNARY = 57428
const BINARY = 57429
const UNDERSCORE_BINARY = 57430
const COLLATE = 57431
const INTERVAL = 57432
const JSON_EXTRACT_OP = 57433
const JSON_UNQUOTE_EXTRACT_OP = 57434
const CREATE = 57435
const ALTER = 57436
const DROP = 57437
const RENAME = 57438
const ANALYZE = 57439
const ADD = 57440
const TABLE = 57441
const INDEX = 57442
const VIEW = 57443
const TO = 57444
const IGNORE = 57445
const IF = 57446
const UNIQUE = 57447
const PRIMARY = 57448
const COLUMN = 57449
const CONSTRAINT = 57450
const SPATIAL = 57451
const FULLTEXT = 57452
const FOREIGN = 57453
const REFERENCES = 57454
const CASCADE = 57455
const RESTRICT = 57456
const NO = 57457
const ACTION = 57458
const SHOW = 57459
const DESCRIBE = 57460
const EXPLAIN = 57461
const DATE = 57462
const ESCAPE = 57463
const REPAIR = 57464
const OPTIMIZE = 57465
const TRUNCATE = 57466
const MAXVALUE = 57467
const PARTITION = 57468
const REORGANIZE = 57469
const LESS = 57470
const THAN = 57471
const PROCEDURE = 57472
const TRIGGER = 57473
const VINDEX = 57474
const VINDEXES = 57475
const ENGINE = 57476
const STATUS = 57477
const VARIABLES = 57478
const BEGIN = 57479
const START = 57480
const TRANSACTION = 57481
const COMMIT = 57482
const ROLLBACK = 57483
const BIT = 57484
const TINYINT = 57485
const SMALLINT = 57486
const MEDIUMINT = 57487
const INT = 57488
const INTEGER = 57489
const BIGINT = 57490
const INTNUM = 57491
const REAL = 57492
const DOUBLE = 57493
const FLOAT_TYPE = 57494
const DECIMAL = 57495
const NUMERIC = 57496
const TIME = 57497
const TIMESTAMP = 57498
const DATETIME = 57499
const YEAR = 57500
const CHAR = 57501
const VARCHAR = 57502
const BOOL = 57503
const CHARACTER = 57504
const VARBINARY = 57505
const NCHAR = 57506
const TEXT = 57507
const TINYTEXT = 57508
const MEDIUMTEXT = 57509
const LONGTEXT = 57510
const BLOB = 57511
const TINYBLOB = 57512
const MEDIUMBLOB = 57513
const LONGBLOB = 57514
const JSON = 57515
const ENUM = 57516
const NULLX = 57517
const AUTO_INCREMENT = 57518
const APPROXNUM = 57519
const SIGNED = 57520
const UNSIGNED = 57521
const ZEROFILL = 57522
const DATABASES = 57523
const TABLES = 57524
const VITESS_KEYSPACES = 57525
const VITESS_SHARDS = 57526
const VITESS_TABLETS = 57527
const VSCHEMA_TABLES = 57528
const NAMES = 57529
const CHARSET = 57530
const GLOBAL = 57531
const SESSION = 57532
const CURRENT_TIMESTAMP = 57533
const DATABASE = 57534
const CURRENT_DATE = 57535
const NOW = 57536
const CURRENT_TIME = 57537
const LOCALTIME = 57538
const LOCALTIMESTAMP = 57539
const UTC_DATE = 57540
const UTC_TIME = 57541
const UTC_TIMESTAMP = 57542
const REPLACE = 57543
const CONVERT = 57544
const CAST = 57545
const GROUP_CONCAT = 57546
const SEPARATOR = 57547
const MATCH = 57548
const AGAINST = 57549
const BOOLEAN = 57550
const LANGUAGE = 57551
const WITH = 57552
const QUERY = 57553
const EXPANSION = 57554
const UNUSED = 57555
const ID = 57556

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"KEYS",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"BINARY",
	"UNDERSCORE_BINARY",
	"COLLATE",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"REFERENCES",
	"CASCADE",
	"RESTRICT",
	"NO",
	"ACTION",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"ENGINE",
	"STATUS",
	"VARIABLES",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"DATABASES",
	"TABLES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA_TABLES",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"GROUP_CONCAT",
	"SEPARATOR",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ID",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 3,
	5, 25,
	-2, 4,
	-1, 223,
	78, 737,
	-2, 44,
	-1, 224,
	78, 710,
	-2, 45,
	-1, 229,
	78, 697,
	-2, 559,
	-1, 231,
	78, 724,
	-2, 561,
	-1, 327,
	107, 596,
	-2, 592,
	-1, 328,
	107, 597,
	-2, 593,
	-1, 738,
	107, 599,
	-2, 595,
	-1, 846,
	5, 25,
	-2, 535,
	-1, 862,
	5, 26,
	-2, 410,
	-1, 1119,
	5, 26,
	-2, 536,
	-1, 1183,
	5, 25,
	-2, 538,
	-1, 1234,
	5, 26,
	-2, 539,
}

const yyPrivate = 57344

const yyLast = 10433

var yyAct = [...]int{

	328, 1265, 1256, 1226, 744, 527, 602, 644, 906, 1010,
	1041, 664, 741, 1011, 733, 694, 380, 938, 1057, 357,
	1095, 1040, 406, 1007, 457, 810, 981, 51, 849, 72,
	702, 803, 973, 165, 228, 813, 165, 645, 195, 737,
	1125, 460, 458, 3, 780, 866, 927, 430, 378, 678,
	728, 827, 854, 812, 942, 369, 436, 323, 222, 165,
	165, 72, 641, 446, 462, 211, 165, 1038, 72, 679,
	210, 204, 719, 885, 888, 889, 189, 50, 1048, 324,
	225, 1047, 707, 209, 872, 1046, 1045, 1031, 194, 1037,
	899, 950, 896, 806, 747, 884, 535, 524, 718, 382,
	522, 347, 342, 950, 571, 1273, 871, 1251, 1264, 1244,
	1259, 745, 1250, 1134, 1039, 805, 1035, 872, 190, 191,
	192, 193, 502, 729, 1209, 1243, 686, 1108, 1176, 333,
	1060, 873, 919, 710, 676, 1229, 567, 566, 577, 578,
	569, 570, 572, 573, 574, 575, 576, 568, 220, 1171,
	1169, 719, 579, 188, 367, 165, 1258, 165, 214, 1053,
	1054, 1055, 165, 1227, 361, 362, 1253, 1059, 1056, 165,
	339, 1276, 706, 72, 72, 72, 72, 718, 72, 72,
	963, 949, 642, 614, 340, 72, 954, 951, 944, 945,
	952, 947, 946, 949, 1197, 1268, 490, 155, 954, 951,
	944, 945, 952, 947, 946, 330, 960, 953, 719, 165,
	532, 55, 962, 956, 1050, 1049, 165, 165, 165, 953,
	1051, 865, 72, 683, 526, 943, 432, 72, 665, 667,
	503, 157, 159, 160, 718, 57, 58, 59, 60, 864,
	174, 225, 1036, 433, 154, 707, 155, 863, 883, 887,
	331, 336, 508, 509, 510, 511, 512, 513, 514, 870,
	516, 517, 518, 519, 520, 504, 505, 506, 507, 488,
	489, 711, 684, 491, 1230, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 352, 895, 354, 1133, 168,
	804, 1034, 870, 156, 1219, 948, 1267, 1266, 1269, 815,
	666, 730, 961, 1242, 959, 591, 592, 948, 1161, 1122,
	985, 1060, 169, 933, 1058, 214, 351, 353, 515, 171,
	601, 571, 165, 521, 158, 177, 173, 345, 676, 341,
	553, 343, 748, 72, 571, 706, 165, 165, 72, 556,
	165, 630, 631, 991, 165, 990, 165, 876, 72, 72,
	72, 72, 72, 72, 72, 72, 175, 787, 554, 179,
	555, 554, 72, 72, 568, 1077, 165, 828, 877, 579,
	472, 785, 786, 784, 556, 407, 45, 556, 349, 852,
	540, 473, 579, 1110, 571, 538, 555, 554, 170, 555,
	554, 992, 523, 828, 329, 997, 1112, 555, 554, 558,
	350, 1052, 917, 556, 438, 1275, 556, 172, 178, 180,
	181, 182, 183, 434, 556, 186, 185, 966, 967, 968,
	153, 45, 572, 573, 574, 575, 576, 568, 48, 200,
	1152, 742, 579, 368, 215, 557, 72, 783, 555, 554,
	184, 165, 1274, 917, 165, 165, 165, 165, 165, 1151,
	555, 554, 773, 775, 776, 556, 165, 774, 1200, 646,
	165, 1199, 1033, 335, 165, 932, 930, 556, 165, 165,
	920, 632, 72, 1212, 1149, 1064, 928, 589, 208, 1136,
	1252, 72, 1239, 368, 1223, 375, 1187, 1224, 1136, 1196,
	1204, 225, 671, 1187, 368, 1203, 372, 431, 324, 1198,
	695, 52, 663, 1187, 1188, 1065, 634, 1136, 1141, 1008,
	648, 649, 850, 651, 647, 1136, 1135, 650, 659, 1029,
	368, 1121, 368, 72, 979, 368, 677, 165, 669, 670,
	673, 1073, 1072, 165, 850, 735, 72, 165, 72, 696,
	979, 736, 695, 214, 214, 214, 214, 214, 356, 356,
	356, 356, 851, 356, 356, 469, 738, 1069, 1070, 214,
	356, 1096, 1069, 1068, 818, 368, 818, 214, 731, 732,
	443, 368, 739, 481, 480, 442, 45, 395, 394, 397,
	398, 399, 400, 851, 781, 22, 396, 401, 633, 20,
	1006, 459, 1117, 443, 443, 1098, 470, 1076, 468, 443,
	72, 616, 617, 618, 619, 620, 621, 622, 623, 1138,
	1139, 1182, 661, 662, 72, 1071, 448, 451, 452, 453,
	449, 817, 450, 454, 22, 850, 855, 856, 1100, 22,
	1104, 48, 1099, 979, 1097, 979, 738, 471, 712, 1102,
	807, 808, 628, 199, 742, 890, 201, 663, 1101, 48,
	1236, 832, 844, 1103, 1105, 845, 712, 734, 1158, 820,
	821, 782, 1146, 824, 1145, 1043, 1023, 825, 729, 72,
	48, 892, 855, 856, 559, 48, 835, 724, 831, 72,
	833, 834, 72, 723, 846, 62, 72, 72, 836, 528,
	742, 1257, 48, 842, 1008, 934, 858, 536, 695, 868,
	869, 695, 365, 859, 656, 695, 695, 603, 356, 657,
	654, 891, 640, 356, 612, 655, 717, 720, 721, 722,
	861, 860, 653, 356, 356, 356, 356, 356, 356, 356,
	356, 652, 894, 1254, 897, 898, 769, 356, 356, 658,
	72, 452, 453, 72, 72, 1249, 72, 675, 874, 165,
	205, 206, 588, 590, 965, 437, 1248, 819, 841, 695,
	713, 714, 715, 716, 840, 939, 886, 370, 72, 435,
	830, 929, 478, 674, 348, 1180, 725, 726, 727, 371,
	600, 931, 1144, 604, 605, 606, 607, 608, 609, 610,
	1142, 613, 615, 615, 615, 615, 615, 615, 615, 615,
	615, 624, 625, 626, 627, 1063, 955, 781, 878, 874,
	1062, 893, 881, 882, 1115, 1159, 72, 740, 862, 215,
	215, 215, 215, 215, 534, 456, 941, 202, 203, 969,
	437, 839, 196, 1215, 197, 459, 52, 668, 165, 838,
	1214, 1179, 851, 215, 1262, 1261, 1216, 1061, 72, 72,
	552, 54, 1009, 56, 770, 771, 467, 777, 778, 49,
	1, 646, 746, 404, 937, 978, 753, 646, 1012, 593,
	594, 595, 596, 597, 598, 599, 72, 1018, 996, 994,
	1225, 1255, 699, 698, 782, 708, 900, 322, 1019, 61,
	1014, 72, 70, 72, 1017, 695, 1030, 697, 905, 904,
	901, 918, 709, 903, 603, 902, 879, 822, 823, 484,
	485, 356, 483, 356, 1044, 448, 451, 452, 453, 449,
	487, 450, 454, 486, 227, 482, 325, 176, 431, 221,
	455, 334, 907, 474, 72, 165, 980, 921, 922, 64,
	958, 957, 749, 587, 72, 1032, 837, 226, 1015, 629,
	429, 1213, 1178, 1074, 995, 880, 611, 72, 165, 826,
	381, 976, 772, 393, 72, 977, 45, 390, 392, 391,
	635, 843, 560, 379, 373, 988, 989, 213, 439, 993,
	604, 908, 447, 72, 999, 445, 1000, 1001, 1002, 1003,
	923, 444, 218, 924, 925, 926, 857, 853, 212, 1005,
	1175, 1228, 639, 1085, 23, 817, 53, 165, 207, 1091,
	18, 17, 1094, 1107, 16, 1090, 19, 847, 848, 1078,
	738, 1028, 1109, 1106, 72, 1093, 72, 72, 72, 165,
	72, 1114, 1080, 1116, 1113, 1083, 227, 227, 227, 227,
	15, 227, 227, 14, 72, 13, 779, 27, 227, 788,
	789, 790, 791, 792, 793, 794, 795, 1124, 796, 797,
	798, 799, 800, 801, 802, 1140, 1127, 1128, 1129, 1132,
	1130, 12, 11, 10, 9, 8, 72, 72, 72, 7,
	1147, 1143, 6, 5, 4, 227, 198, 21, 2, 0,
	475, 0, 0, 1155, 1154, 0, 939, 695, 0, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 1167, 0, 0, 987, 356,
	0, 0, 72, 72, 0, 0, 0, 0, 998, 0,
	0, 1181, 0, 1089, 0, 0, 0, 72, 0, 0,
	1012, 0, 1192, 356, 1193, 0, 0, 1195, 1194, 0,
	0, 1020, 1021, 0, 0, 1022, 0, 0, 1024, 72,
	0, 0, 72, 1183, 0, 0, 0, 0, 1118, 1119,
	1120, 0, 1123, 0, 0, 0, 0, 0, 0, 0,
	0, 1074, 0, 0, 0, 0, 216, 0, 72, 0,
	0, 0, 1217, 986, 1066, 1067, 227, 0, 165, 1205,
	0, 227, 0, 1221, 0, 1012, 0, 0, 0, 0,
	0, 227, 227, 227, 227, 227, 227, 227, 227, 162,
	72, 1013, 1232, 45, 1233, 227, 227, 1218, 72, 0,
	1237, 355, 0, 646, 0, 0, 0, 72, 571, 1025,
	1026, 1027, 1246, 1247, 0, 0, 219, 0, 0, 1162,
	1163, 0, 332, 0, 0, 0, 0, 0, 1245, 1260,
	0, 1172, 1173, 0, 1270, 0, 0, 0, 0, 0,
	0, 970, 971, 972, 569, 570, 572, 573, 574, 575,
	576, 568, 1189, 1190, 1191, 0, 579, 0, 0, 0,
	0, 0, 1148, 0, 1150, 0, 0, 1111, 0, 636,
	0, 0, 0, 0, 0, 0, 325, 0, 0, 0,
	0, 0, 0, 603, 1137, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 22, 46, 24, 25, 0, 0,
	1211, 0, 0, 0, 0, 227, 0, 0, 0, 0,
	0, 337, 40, 338, 227, 325, 0, 26, 344, 0,
	0, 0, 0, 0, 0, 346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 35, 0, 1164, 1165,
	48, 1166, 0, 1234, 1168, 0, 1170, 0, 0, 0,
	1238, 0, 215, 1241, 0, 227, 227, 0, 0, 1208,
	0, 0, 0, 0, 0, 441, 0, 0, 0, 227,
	0, 227, 571, 0, 466, 358, 359, 360, 0, 363,
	364, 0, 1177, 0, 0, 0, 366, 0, 0, 0,
	0, 1201, 0, 1202, 0, 0, 1277, 1278, 28, 29,
	31, 30, 33, 0, 567, 566, 577, 578, 569, 570,
	572, 573, 574, 575, 576, 568, 0, 0, 0, 0,
	579, 356, 34, 41, 42, 0, 0, 43, 44, 32,
	1087, 1088, 0, 809, 0, 227, 0, 0, 405, 0,
	0, 0, 36, 37, 0, 38, 39, 829, 0, 0,
	0, 0, 0, 974, 1174, 0, 0, 0, 0, 0,
	0, 0, 0, 1013, 0, 0, 1184, 0, 0, 759,
	0, 163, 0, 0, 187, 0, 0, 0, 479, 0,
	0, 0, 0, 758, 1231, 603, 0, 0, 0, 0,
	0, 0, 529, 530, 0, 0, 533, 163, 163, 0,
	537, 326, 867, 0, 163, 1206, 47, 0, 0, 0,
	0, 0, 227, 0, 0, 227, 0, 0, 757, 227,
	227, 0, 551, 0, 0, 0, 0, 0, 1013, 0,
	45, 0, 0, 0, 525, 0, 0, 0, 0, 531,
	0, 0, 1160, 0, 0, 0, 0, 0, 571, 541,
	542, 543, 544, 545, 546, 547, 548, 0, 0, 0,
	0, 0, 0, 549, 550, 0, 754, 751, 752, 0,
	750, 0, 0, 227, 0, 0, 935, 227, 0, 227,
	915, 911, 577, 578, 569, 570, 572, 573, 574, 575,
	576, 568, 0, 163, 0, 163, 579, 643, 761, 764,
	163, 227, 571, 912, 1263, 0, 0, 163, 0, 0,
	0, 0, 0, 0, 0, 0, 917, 0, 909, 0,
	0, 0, 0, 910, 0, 672, 368, 0, 0, 571,
	1210, 0, 0, 0, 756, 566, 577, 578, 569, 570,
	572, 573, 574, 575, 576, 568, 0, 163, 755, 983,
	579, 0, 0, 0, 163, 464, 163, 0, 676, 0,
	0, 567, 566, 577, 578, 569, 570, 572, 573, 574,
	575, 576, 568, 0, 760, 916, 914, 579, 325, 0,
	0, 1016, 867, 743, 325, 762, 763, 0, 0, 765,
	0, 0, 0, 767, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1271,
	0, 0, 0, 0, 1042, 0, 1042, 0, 0, 0,
	0, 0, 719, 0, 0, 0, 0, 766, 0, 768,
	0, 0, 0, 0, 0, 0, 913, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 718, 0,
	163, 0, 0, 0, 0, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 163, 163, 0, 1079, 163, 0,
	0, 0, 163, 0, 539, 0, 0, 0, 0, 0,
	1081, 0, 0, 0, 0, 0, 0, 1084, 0, 571,
	0, 0, 0, 0, 163, 0, 0, 0, 0, 0,
	0, 0, 562, 0, 565, 0, 983, 0, 0, 227,
	580, 581, 582, 583, 584, 585, 586, 0, 563, 564,
	561, 567, 566, 577, 578, 569, 570, 572, 573, 574,
	575, 576, 568, 0, 0, 0, 0, 579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1126, 0, 1126,
	1126, 1126, 0, 1131, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1042, 0, 163,
	0, 326, 163, 163, 163, 163, 163, 0, 0, 571,
	0, 0, 0, 0, 660, 0, 0, 0, 163, 0,
	0, 1086, 464, 0, 0, 940, 163, 163, 0, 227,
	227, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 567, 566, 577, 578, 569, 570, 572, 573, 574,
	575, 576, 568, 0, 0, 0, 0, 579, 0, 0,
	0, 0, 0, 0, 0, 936, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1185, 1186, 0, 0, 0,
	539, 0, 0, 0, 0, 163, 0, 0, 0, 964,
	1042, 163, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 111,
	571, 0, 1126, 0, 1004, 227, 0, 0, 88, 707,
	0, 0, 975, 98, 0, 100, 0, 0, 122, 107,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1220, 567, 566, 577, 578, 569, 570, 572, 573,
	574, 575, 576, 568, 0, 82, 0, 0, 579, 816,
	539, 0, 0, 0, 816, 816, 0, 0, 816, 0,
	325, 0, 0, 1235, 0, 0, 0, 0, 0, 0,
	0, 1240, 0, 816, 816, 816, 816, 0, 0, 0,
	1042, 0, 0, 0, 0, 0, 0, 0, 816, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 706,
	166, 1075, 0, 0, 701, 700, 0, 705, 704, 703,
	92, 0, 0, 0, 0, 129, 0, 0, 0, 84,
	0, 119, 112, 139, 1082, 113, 118, 101, 131, 115,
	138, 167, 145, 127, 128, 144, 74, 126, 137, 83,
	120, 76, 135, 124, 105, 95, 96, 75, 0, 117,
	87, 91, 86, 110, 132, 133, 85, 151, 79, 143,
	78, 80, 142, 109, 130, 136, 106, 103, 77, 134,
	104, 102, 97, 89, 0, 0, 0, 123, 140, 152,
	0, 0, 146, 147, 148, 149, 108, 81, 94, 121,
	571, 0, 0, 0, 0, 0, 0, 163, 0, 0,
	0, 0, 0, 0, 0, 0, 73, 0, 99, 150,
	116, 90, 141, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 567, 566, 577, 578, 569, 570, 572, 573,
	574, 575, 576, 568, 0, 0, 0, 0, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	816, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 816, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 1153, 0, 0,
	0, 0, 0, 326, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 816, 0,
	0, 0, 0, 0, 539, 816, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 464, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	310, 300, 273, 312, 251, 265, 320, 266, 267, 294,
	239, 281, 111, 263, 0, 254, 234, 260, 235, 252,
	275, 88, 278, 682, 302, 284, 98, 318, 100, 289,
	0, 122, 107, 0, 0, 277, 304, 279, 299, 272,
	295, 244, 288, 313, 264, 292, 314, 0, 875, 0,
	0, 692, 693, 0, 0, 0, 0, 0, 685, 0,
	291, 309, 262, 293, 233, 290, 0, 237, 240, 319,
	307, 257, 258, 690, 0, 0, 0, 0, 0, 0,
	276, 280, 296, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 287, 0, 0, 0, 238, 0,
	689, 274, 0, 0, 0, 243, 163, 256, 297, 0,
	232, 305, 271, 166, 308, 269, 268, 311, 114, 0,
	0, 125, 93, 92, 0, 326, 0, 0, 129, 303,
	253, 261, 84, 259, 119, 112, 139, 286, 113, 118,
	101, 131, 115, 138, 167, 145, 681, 128, 144, 74,
	126, 137, 83, 120, 76, 135, 124, 105, 95, 96,
	75, 0, 117, 87, 91, 86, 110, 132, 133, 85,
	151, 79, 143, 78, 688, 142, 109, 130, 136, 106,
	103, 77, 134, 104, 102, 97, 89, 0, 680, 0,
	123, 140, 152, 249, 306, 146, 147, 148, 149, 108,
	687, 94, 121, 247, 248, 245, 0, 246, 282, 283,
	315, 316, 317, 298, 242, 0, 0, 301, 285, 73,
	0, 99, 150, 116, 90, 141, 691, 310, 300, 273,
	312, 251, 265, 320, 266, 267, 294, 239, 281, 111,
	263, 0, 254, 234, 260, 235, 252, 275, 88, 278,
	682, 302, 284, 98, 318, 100, 289, 0, 122, 107,
	0, 0, 277, 304, 279, 299, 272, 295, 244, 288,
	313, 264, 292, 314, 0, 0, 0, 0, 692, 693,
	0, 0, 0, 0, 0, 685, 0, 291, 309, 262,
	293, 233, 290, 0, 237, 240, 319, 307, 257, 258,
	690, 0, 0, 0, 0, 0, 0, 276, 280, 296,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 287, 0, 0, 0, 238, 0, 689, 274, 0,
	0, 0, 243, 0, 256, 297, 0, 232, 305, 271,
	166, 308, 269, 268, 311, 114, 0, 0, 125, 93,
	92, 0, 0, 0, 0, 129, 303, 253, 261, 84,
	259, 119, 112, 139, 286, 113, 118, 101, 131, 115,
	138, 167, 145, 681, 128, 144, 74, 126, 137, 83,
	120, 76, 135, 124, 105, 95, 96, 75, 0, 117,
	87, 91, 86, 110, 132, 133, 85, 151, 79, 143,
	78, 688, 142, 109, 130, 136, 106, 103, 77, 134,
	104, 102, 97, 89, 0, 680, 0, 123, 140, 152,
	249, 306, 146, 147, 148, 149, 108, 687, 94, 121,
	247, 248, 245, 0, 246, 282, 283, 315, 316, 317,
	298, 242, 0, 0, 301, 285, 73, 0, 99, 150,
	116, 90, 141, 691, 310, 300, 273, 312, 251, 265,
	320, 266, 267, 294, 239, 281, 111, 263, 0, 254,
	234, 260, 235, 252, 275, 88, 278, 250, 302, 284,
	98, 318, 100, 289, 0, 122, 107, 0, 0, 277,
	304, 279, 299, 272, 295, 244, 288, 313, 264, 292,
	314, 0, 0, 0, 0, 692, 693, 0, 0, 0,
	0, 0, 82, 0, 291, 309, 262, 293, 233, 290,
	0, 237, 240, 319, 307, 257, 258, 690, 0, 0,
	0, 0, 0, 0, 276, 280, 296, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 287, 0,
	0, 0, 238, 0, 241, 274, 0, 0, 0, 243,
	0, 256, 297, 0, 232, 305, 271, 166, 308, 269,
	268, 311, 114, 0, 0, 125, 93, 92, 0, 0,
	0, 0, 129, 303, 253, 261, 84, 259, 119, 112,
	139, 286, 113, 118, 101, 131, 115, 138, 167, 145,
	127, 128, 144, 74, 126, 137, 83, 120, 76, 135,
	124, 105, 95, 96, 75, 0, 117, 87, 91, 86,
	110, 132, 133, 85, 151, 79, 143, 78, 80, 142,
	109, 130, 136, 106, 103, 77, 134, 104, 102, 97,
	89, 0, 236, 0, 123, 140, 152, 249, 306, 146,
	147, 148, 149, 108, 81, 94, 121, 247, 248, 245,
	0, 246, 282, 283, 315, 316, 317, 298, 242, 0,
	0, 301, 285, 73, 0, 99, 150, 116, 90, 141,
	691, 310, 300, 273, 312, 251, 265, 320, 266, 267,
	294, 239, 281, 111, 263, 0, 254, 234, 260, 235,
	252, 275, 88, 278, 250, 302, 284, 98, 318, 100,
	289, 0, 122, 107, 0, 0, 277, 304, 279, 299,
	272, 295, 244, 288, 313, 264, 292, 314, 0, 0,
	0, 0, 1156, 1157, 0, 0, 0, 0, 0, 82,
	0, 291, 309, 262, 293, 233, 290, 0, 237, 240,
	319, 307, 257, 258, 0, 0, 0, 0, 0, 0,
	0, 276, 280, 296, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 287, 0, 0, 0, 238,
	0, 241, 274, 0, 0, 0, 243, 0, 256, 297,
	0, 232, 305, 271, 166, 308, 269, 268, 311, 114,
	0, 0, 125, 93, 92, 0, 0, 0, 0, 129,
	303, 253, 261, 84, 259, 119, 112, 139, 286, 113,
	118, 101, 131, 115, 138, 167, 145, 127, 128, 144,
	74, 126, 137, 83, 120, 76, 135, 124, 105, 95,
	96, 75, 0, 117, 87, 91, 86, 110, 132, 133,
	85, 151, 79, 143, 78, 80, 142, 109, 130, 136,
	106, 103, 77, 134, 104, 102, 97, 89, 0, 236,
	0, 123, 140, 152, 249, 306, 146, 147, 148, 149,
	108, 81, 94, 121, 247, 248, 245, 0, 246, 282,
	283, 315, 316, 317, 298, 242, 0, 0, 301, 285,
	73, 0, 99, 150, 116, 90, 141, 71, 310, 300,
	273, 312, 251, 265, 320, 266, 267, 294, 239, 281,
	111, 263, 0, 254, 234, 260, 235, 252, 275, 88,
	278, 250, 302, 284, 98, 318, 100, 289, 0, 122,
	107, 0, 0, 277, 304, 279, 299, 272, 295, 244,
	288, 313, 264, 292, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 82, 0, 291, 309,
	262, 293, 233, 290, 0, 237, 240, 319, 307, 257,
	258, 0, 0, 0, 0, 0, 0, 0, 276, 280,
	296, 270, 0, 0, 0, 0, 0, 0, 1207, 0,
	255, 0, 287, 0, 0, 0, 238, 0, 241, 274,
	0, 0, 0, 243, 0, 256, 297, 0, 232, 305,
	271, 166, 308, 269, 268, 311, 114, 0, 0, 125,
	93, 92, 0, 0, 0, 0, 129, 303, 253, 261,
	84, 259, 119, 112, 139, 286, 113, 118, 101, 131,
	115, 138, 167, 145, 127, 128, 144, 74, 126, 137,
	83, 120, 76, 135, 124, 105, 95, 96, 75, 0,
	117, 87, 91, 86, 110, 132, 133, 85, 151, 79,
	143, 78, 80, 142, 109, 130, 136, 106, 103, 77,
	134, 104, 102, 97, 89, 0, 236, 0, 123, 140,
	152, 249, 306, 146, 147, 148, 149, 108, 81, 94,
	121, 247, 248, 245, 0, 246, 282, 283, 315, 316,
	317, 298, 242, 0, 0, 301, 285, 73, 0, 99,
	150, 116, 90, 141, 71, 310, 300, 273, 312, 251,
	265, 320, 266, 267, 294, 239, 281, 111, 263, 0,
	254, 234, 260, 235, 252, 275, 88, 278, 250, 302,
	284, 98, 318, 100, 289, 0, 122, 107, 0, 0,
	277, 304, 279, 299, 272, 295, 244, 288, 313, 264,
	292, 314, 48, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 82, 0, 291, 309, 262, 293, 233,
	290, 0, 237, 240, 319, 307, 257, 258, 0, 0,
	0, 0, 0, 0, 0, 276, 280, 296, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 287,
	0, 0, 0, 238, 0, 241, 274, 0, 0, 0,
	243, 0, 256, 297, 0, 232, 305, 271, 166, 308,
	269, 268, 311, 114, 0, 0, 125, 93, 92, 0,
	0, 0, 0, 129, 303, 253, 261, 84, 259, 119,
	112, 139, 286, 113, 118, 101, 131, 115, 138, 167,
	145, 127, 128, 144, 74, 126, 137, 83, 120, 76,
	135, 124, 105, 95, 96, 75, 0, 117, 87, 91,
	86, 110, 132, 133, 85, 151, 79, 143, 78, 80,
	142, 109, 130, 136, 106, 103, 77, 134, 104, 102,
	97, 89, 0, 236, 0, 123, 140, 152, 249, 306,
	146, 147, 148, 149, 108, 81, 94, 121, 247, 248,
	245, 0, 246, 282, 283, 315, 316, 317, 298, 242,
	0, 0, 301, 285, 73, 0, 99, 150, 116, 90,
	141, 71, 310, 300, 273, 312, 251, 265, 320, 266,
	267, 294, 239, 281, 111, 263, 0, 254, 234, 260,
	235, 252, 275, 88, 278, 250, 302, 284, 98, 318,
	100, 289, 0, 122, 107, 0, 0, 277, 304, 279,
	299, 272, 295, 244, 288, 313, 264, 292, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	82, 0, 291, 309, 262, 293, 233, 290, 0, 237,
	240, 319, 307, 257, 258, 0, 0, 0, 0, 0,
	0, 0, 276, 280, 296, 270, 0, 0, 0, 0,
	0, 0, 1092, 0, 255, 0, 287, 0, 0, 0,
	238, 0, 241, 274, 0, 0, 0, 243, 0, 256,
	297, 0, 232, 305, 271, 166, 308, 269, 268, 311,
	114, 0, 0, 125, 93, 92, 0, 0, 0, 0,
	129, 303, 253, 261, 84, 259, 119, 112, 139, 286,
	113, 118, 101, 131, 115, 138, 167, 145, 127, 128,
	144, 74, 126, 137, 83, 120, 76, 135, 124, 105,
	95, 96, 75, 0, 117, 87, 91, 86, 110, 132,
	133, 85, 151, 79, 143, 78, 80, 142, 109, 130,
	136, 106, 103, 77, 134, 104, 102, 97, 89, 0,
	236, 0, 123, 140, 152, 249, 306, 146, 147, 148,
	149, 108, 81, 94, 121, 247, 248, 245, 0, 246,
	282, 283, 315, 316, 317, 298, 242, 0, 0, 301,
	285, 73, 0, 99, 150, 116, 90, 141, 327, 310,
	300, 273, 312, 251, 265, 320, 266, 267, 294, 239,
	281, 111, 263, 0, 254, 234, 260, 235, 252, 275,
	88, 278, 250, 302, 284, 98, 318, 100, 289, 0,
	122, 107, 0, 0, 277, 304, 279, 299, 272, 295,
	244, 288, 313, 264, 292, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 82, 0, 291,
	309, 262, 293, 233, 290, 0, 237, 240, 319, 307,
	257, 258, 0, 0, 0, 0, 0, 0, 0, 276,
	280, 296, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 287, 0, 0, 0, 238, 0, 241,
	274, 0, 0, 0, 243, 0, 256, 297, 0, 232,
	305, 271, 166, 308, 269, 268, 311, 114, 0, 0,
	125, 93, 92, 0, 0, 0, 0, 129, 303, 253,
	261, 84, 259, 119, 112, 139, 286, 113, 118, 101,
	131, 115, 138, 167, 145, 127, 128, 144, 74, 126,
	137, 83, 120, 76, 135, 124, 105, 95, 96, 75,
	0, 117, 87, 91, 86, 110, 132, 133, 85, 151,
	79, 143, 78, 80, 142, 109, 130, 136, 106, 103,
	77, 134, 104, 102, 97, 89, 0, 236, 0, 123,
	140, 152, 249, 306, 146, 147, 148, 149, 108, 81,
	94, 121, 247, 248, 245, 0, 246, 282, 283, 315,
	316, 317, 298, 242, 0, 0, 301, 285, 73, 0,
	99, 150, 116, 90, 141, 71, 310, 300, 273, 312,
	251, 265, 320, 266, 267, 294, 239, 281, 111, 263,
	0, 254, 234, 260, 235, 252, 275, 88, 278, 250,
	302, 284, 98, 318, 100, 289, 0, 122, 107, 0,
	0, 277, 304, 279, 299, 272, 295, 244, 288, 313,
	264, 292, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 82, 0, 291, 309, 262, 293,
	233, 290, 0, 237, 240, 319, 307, 257, 258, 0,
	0, 0, 0, 0, 0, 0, 276, 280, 296, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	287, 0, 0, 0, 238, 0, 241, 274, 0, 0,
	0, 243, 0, 256, 297, 0, 232, 305, 271, 166,
	308, 269, 268, 311, 114, 0, 0, 125, 93, 92,
	0, 0, 0, 0, 129, 303, 253, 261, 84, 259,
	119, 112, 139, 286, 113, 118, 101, 131, 115, 138,
	167, 145, 127, 128, 144, 74, 126, 137, 83, 120,
	76, 135, 124, 105, 95, 96, 75, 0, 117, 87,
	91, 86, 110, 132, 133, 85, 151, 79, 143, 78,
	80, 142, 109, 130, 136, 106, 103, 77, 134, 104,
	102, 97, 89, 0, 236, 0, 123, 140, 152, 249,
	306, 146, 147, 148, 149, 108, 81, 94, 121, 247,
	248, 245, 0, 246, 282, 283, 315, 316, 317, 298,
	242, 0, 0, 301, 285, 73, 0, 99, 150, 116,
	90, 141, 327, 310, 300, 273, 312, 251, 265, 320,
	266, 267, 294, 239, 281, 111, 263, 0, 254, 234,
	260, 235, 252, 275, 88, 278, 250, 302, 284, 98,
	318, 100, 289, 0, 122, 107, 0, 0, 277, 304,
	279, 299, 272, 295, 244, 288, 313, 264, 292, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 82, 0, 291, 309, 262, 293, 233, 290, 0,
	237, 240, 319, 307, 257, 258, 0, 0, 0, 0,
	0, 0, 0, 276, 280, 296, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 287, 0, 0,
	0, 238, 0, 241, 274, 0, 0, 0, 243, 0,
	256, 297, 0, 232, 305, 271, 166, 308, 269, 268,
	311, 114, 0, 0, 125, 93, 92, 0, 0, 0,
	0, 129, 303, 253, 261, 84, 259, 119, 112, 139,
	286, 113, 118, 101, 131, 115, 138, 167, 145, 127,
	128, 144, 74, 126, 137, 83, 120, 76, 135, 124,
	105, 95, 96, 75, 0, 117, 87, 91, 86, 110,
	132, 133, 85, 151, 79, 143, 78, 230, 142, 109,
	130, 136, 106, 103, 77, 134, 104, 102, 97, 89,
	0, 236, 0, 123, 140, 152, 249, 306, 146, 147,
	148, 149, 231, 229, 94, 121, 247, 248, 245, 0,
	246, 282, 283, 315, 316, 317, 298, 242, 0, 0,
	301, 285, 73, 0, 99, 150, 116, 90, 141, 71,
	310, 300, 273, 312, 251, 265, 320, 266, 267, 294,
	239, 281, 111, 263, 0, 254, 234, 260, 235, 252,
	275, 88, 278, 250, 302, 284, 98, 318, 100, 289,
	0, 122, 107, 0, 0, 277, 304, 279, 299, 272,
	295, 244, 288, 313, 264, 292, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 82, 0,
	291, 309, 262, 293, 233, 290, 0, 237, 240, 319,
	307, 257, 258, 0, 0, 0, 0, 0, 0, 0,
	276, 280, 296, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 287, 0, 0, 0, 238, 0,
	241, 274, 0, 0, 0, 243, 0, 256, 297, 0,
	232, 305, 271, 166, 308, 269, 268, 311, 114, 0,
	0, 125, 93, 92, 0, 0, 0, 0, 129, 303,
	253, 261, 84, 259, 119, 112, 139, 286, 113, 118,
	101, 131, 115, 138, 167, 145, 127, 128, 144, 74,
	126, 137, 83, 120, 76, 135, 124, 105, 95, 96,
	75, 0, 117, 87, 91, 86, 110, 132, 133, 85,
	151, 79, 143, 78, 80, 142, 109, 130, 136, 106,
	103, 77, 134, 104, 102, 97, 89, 0, 236, 0,
	123, 140, 152, 249, 306, 146, 147, 148, 149, 108,
	81, 94, 121, 247, 248, 245, 0, 246, 282, 283,
	315, 316, 317, 298, 242, 0, 0, 301, 285, 73,
	0, 99, 150, 116, 90, 141, 164, 310, 300, 273,
	312, 251, 265, 320, 266, 267, 294, 239, 281, 111,
	263, 0, 254, 234, 260, 235, 252, 275, 88, 278,
	250, 302, 284, 98, 318, 100, 289, 0, 122, 107,
	0, 0, 277, 304, 279, 299, 272, 295, 244, 288,
	313, 264, 292, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 82, 0, 291, 309, 262,
	293, 233, 290, 0, 237, 240, 319, 307, 257, 258,
	0, 0, 0, 0, 0, 0, 0, 276, 280, 296,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 287, 0, 0, 0, 238, 0, 241, 274, 0,
	0, 0, 243, 0, 256, 297, 0, 232, 305, 271,
	166, 308, 269, 268, 311, 114, 0, 0, 125, 93,
	92, 0, 0, 0, 0, 129, 303, 253, 261, 84,
	259, 119, 112, 139, 286, 113, 118, 101, 131, 115,
	138, 167, 145, 127, 128, 144, 74, 126, 137, 83,
	120, 76, 135, 124, 105, 95, 96, 75, 0, 117,
	87, 91, 86, 110, 132, 133, 85, 151, 79, 143,
	78, 230, 142, 109, 130, 136, 106, 103, 77, 134,
	104, 102, 97, 89, 0, 236, 0, 123, 140, 152,
	249, 306, 146, 147, 148, 149, 231, 229, 224, 223,
	247, 248, 245, 0, 246, 282, 283, 315, 316, 317,
	298, 242, 0, 0, 301, 285, 73, 0, 99, 150,
	116, 90, 141, 71, 111, 0, 0, 811, 0, 377,
	0, 0, 0, 88, 0, 376, 0, 0, 98, 415,
	100, 0, 0, 122, 107, 0, 0, 0, 0, 408,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 48,
	0, 0, 395, 394, 397, 398, 399, 400, 0, 0,
	82, 396, 401, 402, 403, 0, 0, 374, 388, 0,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 814, 0, 0, 0, 427, 0, 387, 0,
	383, 384, 0, 389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 166, 0, 0, 425, 0,
	114, 0, 0, 125, 93, 92, 0, 0, 0, 0,
	129, 0, 0, 0, 84, 0, 119, 112, 139, 0,
	113, 118, 101, 131, 115, 138, 167, 145, 127, 128,
	144, 74, 126, 137, 83, 120, 76, 135, 124, 105,
	95, 96, 75, 0, 117, 87, 91, 86, 110, 132,
	133, 85, 151, 79, 143, 78, 80, 142, 109, 130,
	136, 106, 103, 77, 134, 104, 102, 97, 89, 0,
	0, 0, 123, 140, 152, 0, 0, 146, 147, 148,
	149, 108, 81, 94, 121, 416, 426, 423, 421, 424,
	420, 422, 419, 418, 417, 428, 410, 411, 413, 0,
	412, 73, 0, 99, 150, 116, 90, 141, 327, 111,
	0, 0, 0, 0, 377, 0, 0, 0, 88, 0,
	376, 0, 0, 98, 415, 100, 0, 0, 122, 107,
	0, 0, 0, 0, 408, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 48, 0, 368, 395, 394, 397,
	398, 399, 400, 0, 0, 82, 396, 401, 402, 403,
	0, 0, 374, 388, 0, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 386, 0, 0, 0,
	0, 427, 0, 387, 0, 383, 384, 0, 389, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	166, 0, 0, 425, 0, 114, 0, 0, 125, 93,
	92, 0, 0, 0, 0, 129, 0, 0, 0, 84,
	0, 119, 112, 139, 0, 113, 118, 101, 131, 115,
	138, 167, 145, 127, 128, 144, 74, 126, 137, 83,
	120, 76, 135, 124, 105, 95, 96, 75, 0, 117,
	87, 91, 86, 110, 132, 133, 85, 151, 79, 143,
	78, 80, 142, 109, 130, 136, 106, 103, 77, 134,
	104, 102, 97, 89, 0, 0, 0, 123, 140, 152,
	0, 0, 146, 147, 148, 149, 108, 81, 94, 121,
	416, 426, 423, 421, 424, 420, 422, 419, 418, 417,
	428, 410, 411, 413, 0, 412, 73, 0, 99, 150,
	116, 90, 141, 327, 111, 0, 0, 0, 0, 377,
	0, 0, 0, 88, 0, 376, 0, 0, 98, 415,
	100, 0, 0, 122, 107, 0, 0, 0, 0, 408,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 48,
	0, 0, 395, 394, 397, 398, 399, 400, 0, 0,
	82, 396, 401, 402, 403, 0, 0, 374, 388, 0,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 814, 0, 0, 0, 427, 0, 387, 0,
	383, 384, 0, 389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 166, 0, 0, 425, 0,
	114, 0, 0, 125, 93, 92, 0, 0, 0, 0,
	129, 0, 0, 0, 84, 0, 119, 112, 139, 0,
	113, 118, 101, 131, 115, 138, 167, 145, 127, 128,
	144, 74, 126, 137, 83, 120, 76, 135, 124, 105,
	95, 96, 75, 0, 117, 87, 91, 86, 110, 132,
	133, 85, 151, 79, 143, 78, 80, 142, 109, 130,
	136, 106, 103, 77, 134, 104, 102, 97, 89, 0,
	0, 0, 123, 140, 152, 0, 0, 146, 147, 148,
	149, 108, 81, 94, 121, 416, 426, 423, 421, 424,
	420, 422, 419, 418, 417, 428, 410, 411, 413, 22,
	412, 73, 0, 99, 150, 116, 90, 141, 327, 0,
	111, 0, 0, 0, 0, 377, 0, 0, 0, 88,
	0, 376, 0, 0, 98, 415, 100, 0, 0, 122,
	107, 0, 0, 0, 0, 408, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 48, 0, 0, 395, 394,
	397, 398, 399, 400, 0, 0, 82, 396, 401, 402,
	403, 0, 0, 374, 388, 0, 414, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 386, 0, 0,
	0, 0, 427, 0, 387, 0, 383, 384, 0, 389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 166, 0, 0, 425, 0, 114, 0, 0, 125,
	93, 92, 0, 0, 0, 0, 129, 0, 0, 0,
	84, 0, 119, 112, 139, 0, 113, 118, 101, 131,
	115, 138, 167, 145, 127, 128, 144, 74, 126, 137,
	83, 120, 76, 135, 124, 105, 95, 96, 75, 0,
	117, 87, 91, 86, 110, 132, 133, 85, 151, 79,
	143, 78, 80, 142, 109, 130, 136, 106, 103, 77,
	134, 104, 102, 97, 89, 0, 0, 0, 123, 140,
	152, 0, 0, 146, 147, 148, 149, 108, 81, 94,
	121, 416, 426, 423, 421, 424, 420, 422, 419, 418,
	417, 428, 410, 411, 413, 0, 412, 73, 0, 99,
	150, 116, 90, 141, 327, 111, 0, 0, 0, 0,
	377, 0, 0, 0, 88, 0, 376, 0, 0, 98,
	415, 100, 0, 0, 122, 107, 0, 0, 0, 0,
	408, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	48, 0, 0, 395, 394, 397, 398, 399, 400, 0,
	0, 82, 396, 401, 402, 403, 0, 0, 374, 388,
	0, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 386, 0, 0, 0, 0, 427, 0, 387,
	0, 383, 384, 0, 389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 425,
	0, 114, 0, 0, 125, 93, 92, 0, 0, 0,
	0, 129, 0, 0, 0, 84, 0, 119, 112, 139,
	0, 113, 118, 101, 131, 115, 138, 167, 145, 127,
	128, 144, 74, 126, 137, 83, 120, 76, 135, 124,
	105, 95, 96, 75, 0, 117, 87, 91, 86, 110,
	132, 133, 85, 151, 79, 143, 78, 80, 142, 109,
	130, 136, 106, 103, 77, 134, 104, 102, 97, 89,
	0, 0, 0, 123, 140, 152, 0, 0, 146, 147,
	148, 149, 108, 81, 94, 121, 416, 426, 423, 421,
	424, 420, 422, 419, 418, 417, 428, 410, 411, 413,
	0, 412, 73, 111, 99, 150, 116, 90, 141, 327,
	0, 0, 88, 0, 0, 0, 0, 98, 415, 100,
	0, 0, 122, 107, 0, 0, 0, 0, 408, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 48, 0,
	0, 395, 394, 397, 398, 399, 400, 0, 0, 82,
	396, 401, 402, 403, 0, 0, 0, 388, 0, 414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	386, 0, 0, 0, 0, 427, 0, 387, 0, 383,
	384, 0, 389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 425, 0, 114,
	0, 0, 125, 93, 92, 0, 0, 0, 0, 129,
	0, 0, 0, 84, 0, 119, 112, 139, 1272, 113,
	118, 101, 131, 115, 138, 167, 145, 127, 128, 144,
	74, 126, 137, 83, 120, 76, 135, 124, 105, 95,
	96, 75, 0, 117, 87, 91, 86, 110, 132, 133,
	85, 151, 79, 143, 78, 80, 142, 109, 130, 136,
	106, 103, 77, 134, 104, 102, 97, 89, 0, 0,
	0, 123, 140, 152, 0, 0, 146, 147, 148, 149,
	108, 81, 94, 121, 416, 426, 423, 421, 424, 420,
	422, 419, 418, 417, 428, 410, 411, 413, 0, 412,
	73, 111, 99, 150, 116, 90, 141, 327, 0, 0,
	88, 0, 0, 0, 0, 98, 415, 100, 0, 0,
	122, 107, 0, 0, 0, 0, 408, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 48, 0, 0, 395,
	394, 397, 398, 399, 400, 0, 0, 82, 396, 401,
	402, 403, 0, 0, 0, 388, 0, 414, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 385, 386, 0,
	0, 0, 0, 427, 0, 387, 0, 383, 384, 0,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 425, 0, 114, 0, 0,
	125, 93, 92, 0, 0, 0, 0, 129, 0, 0,
	0, 84, 0, 119, 112, 139, 0, 113, 118, 101,
	131, 115, 138, 167, 145, 127, 128, 144, 74, 126,
	137, 83, 120, 76, 135, 124, 105, 95, 96, 75,
	0, 117, 87, 91, 86, 110, 132, 133, 85, 151,
	79, 143, 78, 80, 142, 109, 130, 136, 106, 103,
	77, 134, 104, 102, 97, 89, 0, 0, 0, 123,
	140, 152, 0, 0, 146, 147, 148, 149, 108, 81,
	94, 121, 416, 426, 423, 421, 424, 420, 422, 419,
	418, 417, 428, 410, 411, 413, 0, 412, 73, 111,
	99, 150, 116, 90, 141, 327, 0, 0, 88, 0,
	0, 0, 0, 98, 0, 100, 0, 0, 122, 107,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 571,
	0, 0, 0, 0, 0, 82, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 567, 566, 577, 578, 569, 570, 572, 573, 574,
	575, 576, 568, 0, 0, 0, 0, 579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 114, 0, 0, 125, 93,
	92, 0, 0, 0, 0, 129, 0, 0, 0, 84,
	0, 119, 112, 139, 0, 113, 118, 101, 131, 115,
	138, 167, 145, 127, 128, 144, 74, 126, 137, 83,
	120, 76, 135, 124, 105, 95, 96, 75, 0, 117,
	87, 91, 86, 110, 132, 133, 85, 151, 79, 143,
	78, 80, 142, 109, 130, 136, 106, 103, 77, 134,
	104, 102, 97, 89, 0, 0, 0, 123, 140, 152,
	0, 0, 146, 147, 148, 149, 108, 81, 94, 121,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 73, 0, 99, 150,
	116, 90, 141, 71, 111, 0, 0, 0, 982, 0,
	0, 0, 0, 88, 0, 0, 0, 0, 98, 0,
	100, 0, 0, 122, 107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 984, 0, 0, 0, 0, 0, 0,
	82, 0, 0, 0, 0, 555, 554, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 556, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	114, 0, 0, 125, 93, 92, 0, 0, 0, 0,
	129, 0, 0, 0, 84, 0, 119, 112, 139, 0,
	113, 118, 101, 131, 115, 138, 167, 145, 127, 128,
	144, 74, 126, 137, 83, 120, 76, 135, 124, 105,
	95, 96, 75, 0, 117, 87, 91, 86, 110, 132,
	133, 85, 151, 79, 143, 78, 80, 142, 109, 130,
	136, 106, 103, 77, 134, 104, 102, 97, 89, 0,
	0, 0, 123, 140, 152, 0, 111, 146, 147, 148,
	149, 108, 81, 94, 121, 88, 0, 0, 0, 0,
	98, 0, 100, 0, 0, 122, 107, 0, 0, 0,
	0, 73, 0, 99, 150, 116, 90, 141, 71, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 82, 0, 0, 0, 0, 66, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 65, 0, 0,
	0, 69, 114, 0, 0, 125, 93, 92, 0, 0,
	0, 0, 129, 0, 0, 0, 84, 0, 119, 112,
	139, 0, 113, 118, 101, 131, 115, 138, 67, 145,
	127, 128, 144, 74, 126, 137, 83, 120, 76, 135,
	124, 105, 95, 96, 75, 0, 117, 87, 91, 86,
	110, 132, 133, 85, 151, 79, 143, 78, 80, 142,
	109, 130, 136, 106, 103, 77, 134, 104, 102, 97,
	89, 0, 0, 0, 123, 140, 152, 0, 0, 146,
	147, 148, 149, 108, 81, 94, 121, 0, 63, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 73, 0, 99, 150, 116, 90, 141,
	71, 111, 0, 0, 0, 463, 0, 0, 0, 0,
	88, 0, 0, 0, 0, 98, 0, 100, 0, 0,
	122, 107, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	465, 0, 0, 0, 0, 0, 0, 82, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 114, 0, 0,
	125, 93, 92, 0, 0, 0, 0, 129, 0, 0,
	0, 84, 0, 119, 112, 139, 0, 113, 118, 101,
	131, 115, 138, 167, 145, 127, 128, 144, 74, 126,
	137, 83, 120, 76, 135, 124, 105, 95, 96, 75,
	0, 117, 87, 91, 86, 110, 132, 133, 85, 151,
	79, 143, 78, 80, 142, 109, 130, 136, 106, 103,
	77, 134, 104, 102, 97, 89, 0, 0, 0, 123,
	140, 152, 0, 0, 146, 147, 148, 149, 108, 81,
	94, 121, 0, 0, 0, 0, 22, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 111, 73, 0,
	99, 150, 116, 90, 141, 164, 88, 0, 0, 0,
	0, 98, 0, 100, 0, 0, 122, 107, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 48, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 82, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 114, 0, 0, 125, 93, 92, 0,
	0, 0, 0, 129, 0, 0, 0, 84, 0, 119,
	112, 139, 0, 113, 118, 101, 131, 115, 138, 167,
	145, 127, 128, 144, 74, 126, 137, 83, 120, 76,
	135, 124, 105, 95, 96, 75, 0, 117, 87, 91,
	86, 110, 132, 133, 85, 151, 79, 143, 78, 80,
	142, 109, 130, 136, 106, 103, 77, 134, 104, 102,
	97, 89, 0, 0, 0, 123, 140, 152, 0, 0,
	146, 147, 148, 149, 108, 81, 94, 121, 0, 0,
	0, 0, 22, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 111, 73, 0, 99, 150, 116, 90,
	141, 71, 88, 0, 0, 0, 0, 98, 0, 100,
	0, 0, 122, 107, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 48, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 82,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 114,
	0, 0, 125, 93, 92, 0, 0, 0, 0, 129,
	0, 0, 0, 84, 0, 119, 112, 139, 0, 113,
	118, 101, 131, 115, 138, 167, 145, 127, 128, 144,
	74, 126, 137, 83, 120, 76, 135, 124, 105, 95,
	96, 75, 0, 117, 87, 91, 86, 110, 132, 133,
	85, 151, 79, 143, 78, 80, 142, 109, 130, 136,
	106, 103, 77, 134, 104, 102, 97, 89, 0, 0,
	0, 123, 140, 152, 0, 111, 146, 147, 148, 149,
	108, 81, 94, 121, 88, 0, 0, 0, 0, 98,
	0, 100, 0, 0, 122, 107, 0, 0, 0, 0,
	73, 0, 99, 150, 116, 90, 141, 164, 0, 0,
	0, 0, 0, 0, 0, 637, 0, 0, 638, 0,
	0, 82, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 114, 0, 0, 125, 93, 92, 0, 0, 0,
	0, 129, 0, 0, 0, 84, 0, 119, 112, 139,
	0, 113, 118, 101, 131, 115, 138, 167, 145, 127,
	128, 144, 74, 126, 137, 83, 120, 76, 135, 124,
	105, 95, 96, 75, 0, 117, 87, 91, 86, 110,
	132, 133, 85, 151, 79, 143, 78, 80, 142, 109,
	130, 136, 106, 103, 77, 134, 104, 102, 97, 89,
	0, 0, 0, 123, 140, 152, 0, 111, 146, 147,
	148, 149, 108, 81, 94, 121, 88, 0, 477, 0,
	0, 98, 0, 100, 0, 0, 122, 107, 0, 0,
	0, 0, 73, 0, 99, 150, 116, 90, 141, 71,
	0, 0, 0, 0, 0, 0, 476, 0, 0, 0,
	0, 0, 0, 82, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 114, 0, 0, 125, 93, 92, 0,
	0, 0, 0, 129, 0, 0, 0, 84, 0, 119,
	112, 139, 0, 113, 118, 101, 131, 115, 138, 167,
	145, 127, 128, 144, 74, 126, 137, 83, 120, 76,
	135, 124, 105, 95, 96, 75, 0, 117, 87, 91,
	86, 110, 132, 133, 85, 151, 79, 143, 78, 80,
	142, 109, 130, 136, 106, 103, 77, 134, 104, 102,
	97, 89, 0, 0, 0, 123, 140, 152, 0, 0,
	146, 147, 148, 149, 108, 81, 94, 121, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 73, 0, 99, 150, 116, 90,
	141, 71, 111, 0, 0, 0, 463, 0, 0, 0,
	0, 88, 0, 0, 0, 0, 98, 0, 100, 0,
	0, 122, 107, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 465, 0, 0, 0, 0, 0, 0, 82, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 166, 0, 0, 0, 0, 114, 0,
	0, 125, 93, 92, 0, 0, 0, 0, 129, 0,
	0, 0, 84, 0, 119, 112, 139, 0, 461, 118,
	101, 131, 115, 138, 167, 145, 127, 128, 144, 74,
	126, 137, 83, 120, 76, 135, 124, 105, 95, 96,
	75, 0, 117, 87, 91, 86, 110, 132, 133, 85,
	151, 79, 143, 78, 80, 142, 109, 130, 136, 106,
	103, 77, 134, 104, 102, 97, 89, 0, 0, 0,
	123, 140, 152, 0, 111, 146, 147, 148, 149, 108,
	81, 94, 121, 88, 0, 0, 0, 0, 98, 0,
	100, 0, 0, 122, 107, 0, 0, 0, 0, 73,
	0, 99, 150, 116, 90, 141, 164, 0, 0, 48,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	82, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	114, 0, 0, 125, 93, 92, 0, 0, 0, 0,
	129, 0, 0, 0, 84, 0, 119, 112, 139, 0,
	113, 118, 101, 131, 115, 138, 167, 145, 127, 128,
	144, 74, 126, 137, 83, 120, 76, 135, 124, 105,
	95, 96, 75, 0, 117, 87, 91, 86, 110, 132,
	133, 85, 151, 79, 143, 78, 80, 142, 109, 130,
	136, 106, 103, 77, 134, 104, 102, 97, 89, 0,
	0, 0, 123, 140, 152, 0, 111, 146, 147, 148,
	149, 108, 81, 94, 121, 88, 0, 0, 0, 0,
	98, 0, 100, 0, 0, 122, 107, 0, 0, 0,
	0, 73, 0, 99, 150, 116, 90, 141, 164, 0,
	0, 0, 0, 0, 0, 984, 0, 0, 0, 0,
	0, 0, 82, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 114, 0, 0, 125, 93, 92, 0, 0,
	0, 0, 129, 0, 0, 0, 84, 0, 119, 112,
	139, 0, 113, 118, 101, 131, 115, 138, 167, 145,
	127, 128, 144, 74, 126, 137, 83, 120, 76, 135,
	124, 105, 95, 96, 75, 0, 117, 87, 91, 86,
	110, 132, 133, 85, 151, 79, 143, 78, 80, 142,
	109, 130, 136, 106, 103, 77, 134, 104, 102, 97,
	89, 0, 0, 0, 123, 140, 152, 0, 111, 146,
	147, 148, 149, 108, 81, 94, 121, 88, 0, 0,
	0, 0, 98, 0, 100, 0, 0, 122, 107, 0,
	0, 0, 0, 73, 0, 99, 150, 116, 90, 141,
	71, 0, 0, 0, 0, 0, 0, 465, 0, 0,
	0, 0, 0, 0, 82, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 114, 0, 0, 125, 93, 92,
	0, 0, 0, 0, 129, 0, 0, 0, 84, 0,
	119, 112, 139, 0, 113, 118, 101, 131, 115, 138,
	167, 145, 127, 128, 144, 74, 126, 137, 83, 120,
	76, 135, 124, 105, 95, 96, 75, 0, 117, 87,
	91, 86, 110, 132, 133, 85, 151, 79, 143, 78,
	80, 142, 109, 130, 136, 106, 103, 77, 134, 104,
	102, 97, 89, 0, 0, 0, 123, 140, 152, 0,
	0, 146, 147, 148, 149, 108, 81, 94, 121, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 73, 111, 99, 150, 116,
	90, 141, 164, 0, 440, 88, 0, 0, 0, 0,
	98, 0, 100, 0, 0, 122, 107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 82, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 114, 0, 0, 125, 93, 92, 0, 0,
	0, 0, 129, 0, 0, 0, 84, 0, 119, 112,
	139, 0, 113, 118, 101, 131, 115, 138, 167, 145,
	127, 128, 144, 74, 126, 137, 83, 120, 76, 135,
	124, 105, 95, 96, 75, 0, 117, 87, 91, 86,
	110, 132, 133, 85, 151, 79, 143, 78, 80, 142,
	109, 130, 136, 106, 103, 77, 134, 104, 102, 97,
	89, 0, 0, 0, 123, 140, 152, 0, 111, 146,
	147, 148, 149, 108, 81, 94, 121, 88, 0, 0,
	0, 0, 98, 0, 100, 0, 0, 122, 107, 0,
	0, 0, 0, 73, 0, 99, 150, 116, 90, 141,
	164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 82, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 114, 0, 0, 125, 93, 92,
	0, 0, 0, 0, 129, 0, 0, 0, 84, 0,
	119, 112, 139, 0, 113, 118, 101, 131, 115, 138,
	167, 145, 127, 128, 144, 74, 126, 137, 83, 120,
	76, 135, 124, 105, 95, 96, 75, 0, 117, 87,
	91, 86, 110, 132, 133, 85, 151, 79, 143, 78,
	80, 142, 109, 130, 136, 106, 103, 77, 134, 104,
	102, 97, 89, 217, 0, 0, 123, 140, 152, 0,
	111, 146, 147, 148, 149, 108, 81, 94, 121, 88,
	0, 0, 0, 0, 98, 0, 100, 0, 0, 122,
	107, 0, 0, 0, 0, 73, 0, 99, 150, 116,
	90, 141, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 82, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 114, 0, 0, 125,
	93, 92, 0, 0, 0, 0, 129, 0, 0, 0,
	84, 0, 119, 112, 139, 0, 113, 118, 101, 131,
	115, 138, 167, 145, 127, 128, 144, 74, 126, 137,
	83, 120, 76, 135, 124, 105, 95, 96, 75, 0,
	117, 87, 91, 86, 110, 132, 133, 85, 151, 79,
	143, 78, 80, 142, 109, 130, 136, 106, 103, 77,
	134, 104, 102, 97, 89, 0, 0, 0, 123, 140,
	152, 0, 111, 146, 147, 148, 149, 108, 81, 94,
	121, 88, 0, 0, 0, 0, 98, 0, 100, 0,
	0, 122, 107, 0, 0, 0, 0, 73, 0, 99,
	150, 116, 90, 141, 164, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 82, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 0, 166, 0, 0, 0, 0, 114, 0,
	0, 125, 93, 92, 0, 0, 0, 0, 129, 0,
	0, 0, 84, 0, 119, 112, 139, 0, 113, 118,
	101, 131, 115, 138, 167, 145, 127, 128, 144, 74,
	126, 137, 83, 120, 76, 135, 124, 105, 95, 96,
	75, 0, 117, 87, 91, 86, 110, 132, 133, 85,
	151, 79, 143, 78, 80, 142, 109, 130, 136, 106,
	103, 77, 134, 104, 102, 97, 89, 0, 0, 0,
	123, 140, 152, 0, 111, 146, 147, 148, 149, 108,
	81, 94, 121, 88, 0, 0, 0, 0, 98, 0,
	100, 0, 0, 122, 107, 0, 0, 0, 0, 73,
	0, 99, 150, 116, 90, 141, 164, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	82, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	114, 0, 0, 125, 93, 92, 0, 0, 0, 0,
	129, 0, 0, 0, 84, 0, 119, 112, 139, 0,
	113, 118, 101, 131, 115, 138, 167, 145, 127, 128,
	144, 74, 126, 137, 83, 120, 76, 135, 124, 105,
	95, 96, 75, 0, 117, 87, 91, 86, 110, 132,
	133, 85, 151, 79, 143, 78, 80, 142, 109, 130,
	136, 106, 103, 77, 134, 104, 102, 97, 89, 0,
	0, 0, 123, 140, 152, 0, 111, 146, 147, 148,
	149, 108, 81, 94, 121, 88, 0, 0, 0, 0,
	98, 0, 100, 0, 0, 122, 107, 0, 0, 0,
	0, 73, 0, 99, 150, 116, 90, 141, 71, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 82, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 114, 0, 0, 125, 93, 92, 0, 0,
	0, 0, 129, 0, 0, 0, 84, 0, 119, 112,
	139, 0, 113, 118, 101, 131, 115, 138, 167, 145,
	127, 128, 144, 74, 126, 137, 83, 120, 76, 135,
	124, 105, 95, 96, 75, 0, 117, 87, 91, 86,
	110, 132, 133, 85, 151, 79, 143, 78, 80, 142,
	109, 130, 136, 106, 103, 77, 134, 104, 102, 97,
	89, 0, 0, 0, 123, 140, 152, 0, 111, 146,
	147, 148, 149, 108, 81, 94, 121, 88, 0, 0,
	0, 0, 98, 0, 100, 0, 0, 122, 107, 0,
	0, 0, 0, 73, 0, 99, 150, 116, 90, 141,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 82, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 114, 0, 0, 125, 93, 92,
	0, 0, 0, 0, 129, 0, 0, 0, 84, 0,
	119, 112, 139, 0, 113, 118, 101, 131, 115, 138,
	167, 145, 127, 128, 144, 74, 126, 137, 83, 120,
	76, 135, 124, 105, 95, 96, 75, 0, 117, 87,
	91, 86, 110, 132, 133, 85, 151, 79, 143, 78,
	80, 142, 109, 130, 136, 106, 103, 77, 134, 104,
	102, 97, 89, 0, 0, 0, 123, 140, 152, 0,
	0, 146, 147, 148, 149, 108, 81, 94, 121, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 73, 0, 99, 150, 116,
	90, 141, 164,
}
var yyPact = [...]int{

	1318, -1000, -155, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	822, 846, -1000, -1000, -1000, -1000, -1000, 633, 7149, 126,
	177, 115, 9655, 173, 209, 10201, -1000, -3, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 618, -1000, -1000, -1000, -1000,
	-1000, 816, 819, 640, 808, 712, -1000, 77, 8537, 9473,
	5052, -1000, 9291, 84, 133, 10201, -89, 9837, 84, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 135, 10201, -1000, 10201, 63, 63, -129,
	63, 10201, -1000, 220, -1000, -1000, -1000, -1000, 10201, -130,
	745, 169, 3690, 3690, 3690, 3690, 12, 3690, 3690, 652,
	-1000, -1000, -1000, -1000, 3690, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 379, 749, 6128, 6128, 822, -1000,
	618, -1000, -1000, -1000, 735, -1000, -1000, 342, 9109, 546,
	875, -1000, -1000, -1000, 804, 7776, 8355, 10201, 545, -1000,
	584, 4598, -1000, -1000, -1000, 303, 8140, -1000, -1000, -1000,
	743, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 10201, 520, -1000, 93, -1000, 216, -1000, -1000, -131,
	322, -134, 3690, 106, 638, 10201, 10201, 3690, 91, 10201,
	802, -135, 647, 10201, -1000, 4825, -1000, 3690, 3690, 3690,
	3690, 3690, 3690, 3690, 3690, -1000, -1000, -1000, -1000, -1000,
	-1000, 3690, 3690, -1000, -1000, 10201, -1000, -1000, -1000, -1000,
	842, 242, 382, -1000, 6128, 1772, 597, 597, -1000, -1000,
	197, -1000, -1000, 6544, 6544, 6544, 6544, 6544, 6544, 6544,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 597, 213, -1000, 5913, 597, 597,
	597, 597, 597, 597, 6128, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 589,
	-1000, 318, 816, 379, 712, 7958, 671, -1000, -1000, 39,
	10201, -1000, 10019, 8537, 8537, 8537, 8537, 8537, -1000, 691,
	682, -1000, 670, 664, 699, 10201, -1000, 517, 379, 7776,
	180, 597, -1000, 8901, -1000, -1000, 39, 8537, 10201, -1000,
	-1000, 4598, 584, 6128, 223, -1000, -1000, -1000, -1000, 472,
	2782, 2002, -1000, -63, -1000, -1000, 604, -1000, 604, 604,
	604, 604, -28, -28, -28, -28, -1000, -1000, -1000, -1000,
	-1000, 631, 625, -1000, 604, 604, 604, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 616, 71, 616, 605,
	605, 4371, 2782, 795, 639, -1000, 10201, -116, -137, 246,
	1485, -1000, 10201, -1000, -1000, 3690, 10201, 3690, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 700, 6128, 6128, 387, 6128, 6128, 254,
	6544, 376, 285, 6544, 6544, 6544, 6544, 6544, 6544, 6544,
	6544, -1000, 6544, 6544, 6544, 6544, 6544, 6544, 6544, 59,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -138, -1000,
	618, 522, 522, 277, 277, 277, 277, 277, 277, 6752,
	5267, 4371, 511, 329, 5913, 5697, 5697, 6128, 6128, 5697,
	810, 293, 329, 9837, -1000, 379, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 5697, 5697, 5697, 5697, 6128, -1000,
	-1000, -1000, 749, -1000, 810, 821, -1000, 732, 726, 5697,
	-1000, 623, 597, -1000, 572, -1000, 301, 875, 622, 646,
	576, -1000, -1000, -1000, -1000, 681, -1000, 680, -1000, -1000,
	-1000, -1000, -1000, 379, -1000, 130, 122, 104, 9837, -1000,
	831, 541, -1000, -1000, 329, -1000, 28, -1000, 2555, -1000,
	290, 3009, 29, -1000, -1000, 3009, 3009, 17, 737, 61,
	18, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 593, 619,
	784, 55, -139, 218, 218, -141, -1000, -1000, 1583, -65,
	-1000, -1000, 413, -28, -28, -1000, -1000, 223, 17, 737,
	223, 223, 223, 420, 420, -1000, -1000, -1000, -1000, 409,
	616, -1000, -1000, -1000, 408, -1000, -1000, 206, -1000, 2555,
	-1000, 645, 9837, 3690, -1000, 4144, -1000, -1000, 10201, -1000,
	76, 64, 185, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 37, -1000, -1000, 3690, -1000, 717,
	254, 289, -1000, -1000, 352, -1000, -1000, 329, 329, 2153,
	-1000, -1000, -1000, -1000, 376, 6544, 6544, 6544, 1345, 2153,
	1963, 1521, 1575, 277, 327, 327, 264, 264, 264, 264,
	264, 1181, 1181, -1000, -1000, -1000, 379, -1000, -1000, -1000,
	379, 5697, 582, -1000, -1000, 6967, 203, 597, 6128, -1000,
	471, 471, 292, 370, 471, 5697, 319, -1000, 6128, 379,
	-1000, 471, 379, 471, 471, -1000, -1000, 10201, -1000, -1000,
	-1000, -1000, 580, 644, 10019, 597, -1000, 7570, 9837, 822,
	10019, 6128, 6128, -1000, -1000, 6128, 614, -1000, 6128, -1000,
	-1000, -1000, -1000, 597, 597, 597, 466, -1000, 822, -1000,
	-1000, -144, -1000, -1000, -1000, 2782, -1000, 405, -1000, -1000,
	-1000, -1000, -1000, -1000, 60, -1000, 11, -1000, -1000, -1000,
	9837, 613, 9837, -145, -146, -1000, -1000, -150, -153, 92,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	336, 103, 839, -1000, 783, -1000, 778, 419, -1000, -1000,
	451, 223, 223, -1000, -1000, -1000, -1000, 509, -1000, 504,
	562, -1000, 478, 4144, 10201, -1000, -1000, 544, -1000, 287,
	-1000, -1000, -1000, 9837, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 9837, 10201, -1000, -1000,
	-1000, -1000, -1000, 9837, -1000, -1000, -1000, -1000, -1000, -1000,
	1345, 2153, 1862, -1000, 6544, 6544, -1000, -1000, 471, 5697,
	-1000, -1000, 8719, -1000, -1000, 3917, 5697, 329, -1000, -1000,
	458, 59, 458, -97, 487, 306, -1000, 6128, 321, -1000,
	-1000, -1000, -1000, -1000, -1000, 831, 8537, -1000, 788, 459,
	539, -1000, -1000, 5482, 379, 468, 202, 466, 816, -1000,
	329, 329, 329, 9837, 329, 9837, 9837, 9837, 7364, 9837,
	816, -1000, -1000, -1000, -1000, -1000, -1000, 57, -1000, -1000,
	462, -1000, 586, 9837, 454, -1000, -1000, -1000, -1000, 763,
	218, 755, -1000, -1000, -1000, -1000, -1000, -1000, 612, -1000,
	610, -78, -1000, -1000, -1000, -1000, -1000, -1000, -28, 418,
	-28, 392, -1000, 373, -1000, 3690, 4144, 3236, -1000, 606,
	-1000, -1000, -1000, -1000, 790, -1000, 6544, 2153, 2153, -1000,
	-1000, -1000, -1000, 201, 379, 379, 604, 604, -1000, 604,
	605, -1000, 604, -14, 604, -15, 379, 379, 597, -94,
	-1000, 329, 6128, 829, 540, 748, -1000, 597, -1000, -1000,
	579, 9837, 9837, -1000, -1000, 450, -1000, 440, 440, 440,
	180, -1000, -1000, -1000, -1000, 380, 9837, -1000, -1000, -1000,
	435, 65, -1000, -1000, -1000, 445, 404, -1000, 223, -1000,
	223, 441, 436, -1000, -1000, -1000, -1000, -1000, 9837, 597,
	2153, 3463, -1000, -1000, -1000, -107, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 6544, 379, 417, 329, 827, 818,
	838, -1000, 597, -1000, 618, 187, -1000, 9837, -1000, -1000,
	-1000, -1000, -1000, -1000, 339, -1000, -1000, 10201, -1000, 430,
	-1000, -1000, -1000, -1000, -1000, 433, 20, -1000, -1000, -1000,
	47, -1000, -1000, -1000, 6128, 6128, 10019, 539, 379, 9837,
	-1000, -1000, 598, -1000, 638, 429, -1000, 9837, 379, 78,
	-119, 329, 513, 481, -1000, -1000, 9837, -116, -1000, 20,
	724, -1000, 708, -114, -122, 426, -1000, -1000, 21, -1000,
	696, -1000, 641, 10, -117, -1000, 641, 836, 597, -120,
	-1000, 166, 166, 6336, -124, -1000, -1000, -1000, 377, 38,
	-1000, 1602, 379, -1000, -1000, -1000, -1000, -1000, -1000,
}
var yyPgo = [...]int{

	0, 1088, 42, 589, 1087, 1086, 1084, 1083, 1082, 1079,
	1075, 1074, 1073, 1072, 1071, 1047, 1045, 1043, 1040, 1016,
	1014, 1011, 1010, 211, 1008, 1006, 1004, 56, 1002, 71,
	1001, 1000, 32, 53, 25, 35, 299, 999, 24, 70,
	65, 998, 52, 997, 996, 992, 991, 63, 985, 982,
	1186, 978, 977, 11, 28, 974, 973, 972, 971, 48,
	485, 970, 969, 968, 967, 963, 962, 44, 6, 9,
	22, 13, 960, 99, 16, 959, 51, 956, 954, 952,
	951, 27, 950, 47, 949, 38, 55, 948, 40, 62,
	45, 23, 7, 148, 947, 37, 58, 946, 420, 943,
	170, 394, 942, 941, 940, 939, 34, 0, 863, 19,
	26, 936, 12, 933, 1468, 39, 64, 41, 930, 76,
	1231, 31, 929, 927, 20, 925, 923, 920, 912, 910,
	909, 271, 905, 8, 903, 18, 223, 272, 902, 901,
	50, 14, 900, 899, 898, 46, 57, 897, 30, 889,
	887, 886, 885, 15, 69, 49, 883, 882, 881, 2,
	10, 21, 880, 3, 866, 17, 864, 4, 862, 5,
	54, 126, 1, 860, 859, 375, 154, 856, 853, 183,
}
var yyR1 = [...]int{

	0, 173, 174, 174, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 3, 4, 4, 5, 5, 6,
	6, 26, 26, 7, 8, 8, 177, 177, 45, 45,
	89, 89, 9, 9, 122, 122, 10, 10, 10, 10,
	10, 10, 10, 169, 169, 168, 167, 167, 166, 166,
	165, 15, 15, 149, 150, 150, 150, 146, 152, 152,
	151, 151, 151, 151, 151, 151, 151, 151, 125, 125,
	125, 128, 128, 126, 126, 126, 126, 126, 126, 126,
	126, 127, 127, 127, 127, 127, 127, 129, 129, 129,
	129, 129, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 145, 145, 131,
	131, 140, 140, 141, 141, 141, 138, 138, 139, 139,
	142, 142, 132, 132, 132, 132, 132, 132, 132, 132,
	135, 135, 135, 134, 143, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 137, 137, 137, 137, 137,
	144, 144, 144, 144, 133, 147, 147, 147, 147, 147,
	147, 147, 157, 157, 157, 157, 158, 158, 159, 159,
	172, 172, 172, 172, 172, 156, 156, 156, 156, 156,
	156, 156, 148, 148, 161, 161, 160, 160, 160, 155,
	155, 155, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 171, 171, 171, 171, 171, 171, 171, 153,
	153, 153, 11, 11, 11, 11, 11, 11, 11, 11,
	11, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 164, 162, 162, 163, 163, 12, 13, 13,
	13, 13, 14, 14, 16, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 123, 123,
	123, 18, 18, 20, 20, 21, 22, 19, 19, 19,
	19, 19, 178, 23, 24, 24, 25, 25, 25, 29,
	29, 29, 27, 27, 28, 28, 34, 34, 33, 33,
	35, 35, 35, 35, 111, 111, 111, 110, 110, 37,
	37, 38, 38, 39, 39, 40, 40, 40, 52, 52,
	88, 88, 90, 90, 41, 41, 41, 41, 42, 42,
	43, 43, 44, 44, 118, 118, 117, 117, 117, 116,
	116, 46, 46, 46, 48, 47, 47, 47, 47, 49,
	49, 51, 51, 50, 50, 53, 53, 53, 53, 54,
	54, 36, 36, 36, 36, 36, 36, 36, 99, 99,
	56, 56, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 66, 66, 66, 66, 66, 66, 57, 57,
	57, 57, 57, 57, 57, 32, 32, 67, 67, 67,
	73, 68, 68, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 64, 64, 64, 62, 62,
	62, 62, 62, 62, 62, 62, 62, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 179, 179, 65, 65,
	65, 65, 30, 30, 30, 30, 30, 121, 121, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 77, 77, 31, 31, 75, 75, 76, 78,
	78, 74, 74, 74, 59, 59, 59, 59, 59, 59,
	59, 59, 61, 61, 61, 79, 79, 80, 80, 81,
	81, 82, 82, 83, 84, 84, 84, 85, 85, 85,
	85, 86, 86, 86, 58, 58, 58, 58, 58, 58,
	87, 87, 87, 87, 91, 91, 69, 69, 71, 71,
	70, 72, 92, 92, 95, 93, 93, 96, 96, 94,
	94, 94, 113, 113, 113, 97, 97, 100, 100, 101,
	101, 98, 98, 102, 102, 102, 102, 102, 102, 102,
	102, 102, 102, 103, 103, 103, 104, 104, 105, 105,
	105, 112, 108, 108, 109, 109, 114, 114, 115, 115,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 175, 176, 119, 120, 120, 120,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 6, 7, 10, 1, 3, 1, 3, 7,
	8, 1, 1, 8, 8, 6, 1, 1, 1, 3,
	0, 4, 3, 4, 1, 1, 2, 5, 5, 8,
	4, 6, 5, 0, 2, 1, 0, 2, 1, 3,
	3, 4, 6, 4, 1, 3, 3, 3, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 3, 2, 2, 2, 2, 1, 2, 2,
	2, 1, 4, 4, 2, 2, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 6, 6, 1, 3, 0,
	3, 0, 5, 0, 3, 5, 0, 1, 0, 1,
	1, 2, 2, 2, 2, 2, 2, 2, 4, 2,
	1, 4, 3, 3, 1, 0, 2, 3, 2, 3,
	3, 4, 3, 4, 3, 0, 2, 3, 2, 2,
	2, 1, 2, 1, 2, 5, 6, 5, 5, 4,
	4, 10, 4, 3, 4, 4, 1, 2, 3, 3,
	1, 1, 2, 2, 2, 2, 3, 3, 2, 2,
	3, 3, 1, 1, 1, 3, 2, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 1, 1, 2, 2,
	1, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 6, 7, 7, 12, 7, 7, 7, 4,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 7, 1, 3, 8, 8, 5, 4, 5,
	6, 5, 3, 2, 3, 4, 4, 4, 4, 4,
	4, 4, 4, 3, 3, 3, 3, 4, 3, 3,
	4, 2, 4, 2, 2, 2, 2, 3, 0, 1,
	1, 2, 1, 1, 2, 1, 1, 2, 2, 2,
	2, 2, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 1, 0, 1, 0, 1, 0, 1, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 1, 0,
	2, 1, 3, 1, 1, 1, 3, 3, 3, 7,
	1, 3, 1, 3, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 0, 1, 2, 1,
	1, 1, 2, 2, 1, 2, 3, 2, 3, 2,
	2, 2, 1, 1, 3, 0, 5, 5, 5, 0,
	2, 1, 3, 3, 2, 3, 1, 2, 0, 3,
	1, 1, 3, 3, 4, 4, 5, 3, 4, 5,
	6, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 2, 2, 2, 2,
	3, 1, 1, 1, 1, 4, 5, 6, 4, 4,
	6, 6, 6, 9, 7, 5, 4, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 0, 2, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 2,
	3, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 0, 2, 0,
	3, 1, 3, 2, 0, 1, 1, 0, 2, 4,
	4, 0, 2, 4, 2, 1, 3, 5, 4, 6,
	1, 3, 3, 5, 0, 5, 1, 3, 1, 2,
	3, 1, 1, 3, 3, 1, 3, 3, 3, 1,
	2, 1, 1, 1, 1, 1, 1, 0, 2, 0,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 1, 0, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -173, -1, -2, -6, -7, -8, -9, -10, -11,
	-12, -13, -14, -16, -17, -18, -20, -21, -22, -19,
	-3, -4, 6, -26, 8, 9, 29, -15, 110, 111,
	113, 112, 141, 114, 134, 48, 154, 155, 157, 158,
	24, 135, 136, 139, 140, -175, 7, 218, 52, -174,
	232, -81, 14, -25, 5, -23, -178, -23, -23, -23,
	-23, -149, 52, 209, -105, 118, 68, 149, 116, 122,
	-108, 231, -107, 224, 154, 165, 159, 186, 178, 176,
	179, 205, 63, 157, 137, 174, 170, 168, 26, 191,
	229, 169, 128, 127, 206, 163, 164, 190, 31, 226,
	33, 145, 189, 185, 188, 162, 184, 37, 204, 181,
	171, 17, 140, 143, 123, 147, 228, 167, 144, 139,
	158, 207, 36, 195, 161, 126, 155, 151, 152, 133,
	182, 146, 172, 173, 187, 160, 183, 156, 148, 141,
	196, 230, 180, 177, 153, 150, 200, 201, 202, 203,
	227, 175, 197, -98, 118, 120, 116, 116, 209, 117,
	118, 116, -50, -114, 231, -107, 118, 149, 116, 103,
	179, 110, 198, 117, 31, 147, -123, 116, 199, 150,
	200, 201, 202, 203, 231, 207, 206, -114, 156, -119,
	-119, -119, -119, -119, -2, -85, 16, 15, -5, -3,
	-175, 6, 19, 20, -29, 38, 39, -24, -98, -38,
	-39, -40, -41, -52, -73, -175, -50, 10, -45, -50,
	-93, -122, -96, 207, 206, -109, -94, -108, -106, 205,
	179, 204, 115, 69, 21, 23, 193, 72, 103, 15,
	73, 105, 219, 110, 46, 210, 212, 208, 209, 198,
	28, 9, 24, 135, 20, 97, 112, 76, 77, 138,
	22, 136, 67, 18, 49, 10, 12, 13, 121, 120,
	88, 117, 44, 7, 106, 25, 85, 40, 27, 42,
	86, 16, 213, 214, 30, 223, 142, 99, 47, 34,
	70, 65, 50, 68, 14, 45, 87, 113, 218, 43,
	6, 222, 29, 134, 41, 116, 199, 75, 119, 66,
	5, 122, 8, 48, 51, 215, 216, 217, 32, 74,
	11, 86, -150, -146, -74, -108, -114, 231, -107, -101,
	121, 117, -50, 218, -108, -101, 116, -50, -50, -100,
	121, -100, 231, -100, -50, 107, -50, 231, 29, 209,
	231, 147, 116, 148, 118, -120, -175, -109, -120, -120,
	-120, 152, 153, -120, -120, 50, -120, -176, 54, -86,
	18, 30, -36, -55, 70, -60, 28, 22, -59, -56,
	-74, -72, -73, 103, 104, 93, 94, 101, 71, 106,
	-64, -62, -63, -65, 56, 55, 64, 57, 58, 59,
	60, 65, 66, 67, -108, -114, -70, -175, 42, 43,
	219, 220, 223, 221, 73, 32, 208, 217, 216, 215,
	213, 211, 214, 210, 212, 121, 209, 99, 218, -82,
	-83, -36, -81, -2, -23, 34, -27, 20, 62, -51,
	25, -50, 29, 53, -46, -48, -47, -49, 40, 44,
	46, 41, 42, 43, 47, -118, 21, -38, -2, -175,
	-117, 143, -116, 21, -114, 56, -50, -177, 53, 10,
	51, 53, -93, 78, -113, -108, 56, 28, 29, -50,
	54, 53, -125, -128, -130, -129, -126, -127, 176, 177,
	103, 180, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 29, 137, 172, 173, 174, 175, 159, 160,
	161, 162, 163, 164, 165, 225, 167, 168, 169, 170,
	171, 107, 231, 70, 231, -120, 118, -169, 51, -50,
	-50, -120, 119, -50, 22, 231, 50, -50, -115, -114,
	-106, -120, -120, -120, -120, -120, -120, -120, -120, -120,
	-120, -50, 8, 88, 69, 68, 85, 53, 17, -36,
	-57, 88, 70, 86, 87, 72, 90, 89, 100, 93,
	94, 57, 95, 96, 97, 98, 99, 91, 92, 105,
	78, 79, 80, 81, 82, 83, 84, -99, -175, -73,
	-175, 108, 109, -60, -60, -60, -60, -60, -60, -60,
	-175, 107, -68, -36, -175, -175, -175, -175, -175, -175,
	-175, -77, -36, -175, -179, -175, -179, -179, -179, -179,
	-179, -179, -179, -179, -175, -175, -175, -175, 53, -84,
	23, 24, -85, -176, -29, -61, -108, 57, 60, -28,
	41, -89, 143, -50, -92, -95, -74, -39, -40, -40,
	-39, -40, 40, 40, 40, 45, 40, 45, 40, -47,
	-114, -176, -176, -2, -53, 48, 120, 49, -175, -116,
	-89, -38, -50, -96, -36, -137, 105, 54, -155, -154,
	193, 151, 28, -136, -137, 63, -171, 205, 179, 105,
	78, 231, 56, 57, -153, -109, -146, -147, -156, -157,
	123, 122, -148, 127, 126, 125, 117, 27, -152, -138,
	196, -131, 52, -131, -131, -131, -131, -136, 205, 179,
	-136, -136, -136, 52, 52, -131, -131, -131, -140, 52,
	230, -140, -140, -141, 52, -141, -109, -115, -106, -155,
	22, -112, 51, -50, -167, 227, -168, 231, 86, -102,
	115, 112, 113, -164, 111, 193, 179, 63, 28, 14,
	219, 143, 230, 231, 144, -50, -120, -50, -120, 36,
	-36, -36, -66, 65, 70, 66, 67, -36, -36, -60,
	-67, -70, -73, 61, 88, 86, 87, 72, -60, -60,
	-60, -60, -60, -60, -60, -60, -60, -60, -60, -60,
	-60, -60, -60, -121, 231, 56, 231, -59, -59, -108,
	-34, 20, -33, -35, 95, -36, -114, -109, 53, -176,
	-33, -33, -36, -36, -33, -27, -75, -76, 74, -108,
	-176, -33, -34, -33, -33, -83, -86, -97, 18, 10,
	32, 32, -33, -58, 29, 32, -2, -175, -175, -54,
	53, 11, 78, -43, -42, 50, 51, -44, 50, -42,
	40, 40, -176, 117, 117, 117, -90, -108, -54, -54,
	231, 78, 56, 103, -154, 53, 57, 78, -171, -136,
	-137, -171, -171, 231, 78, 56, 29, 231, 56, 57,
	52, -112, 52, 27, -148, 231, 231, -148, -148, 231,
	-151, -142, -132, -134, -143, -144, -133, -136, -137, 65,
	70, 28, 50, 193, 123, 27, 122, 63, -139, 197,
	57, -136, -136, -137, -137, -137, -137, -145, 56, -145,
	57, -140, 57, 107, 50, -108, -120, -166, -165, -109,
	-50, -119, -170, 149, 124, 125, 128, 127, 231, 117,
	27, 123, 126, 143, 122, -170, 149, -103, -104, 119,
	21, 117, 27, 143, -120, 37, 65, 66, 67, -67,
	-60, -60, -60, -32, 138, 69, -176, -176, -33, 53,
	-111, -110, 21, -108, 56, 107, -175, -36, -176, -176,
	53, 51, 21, -176, -33, -78, -76, 76, -36, -176,
	-176, -176, -176, -176, -50, -37, 10, -91, 50, -92,
	-69, -71, -70, -175, -2, -87, -108, -90, -81, -95,
	-36, -36, -36, 52, -36, -175, -175, -175, -176, 53,
	-81, 231, -154, 57, 231, 56, 231, 78, 56, 103,
	-161, -160, -108, 52, -161, 231, 231, 231, 231, 123,
	122, 128, 65, 56, 57, 58, 65, -135, 211, 64,
	208, 8, 27, 27, 56, 54, -137, -137, 54, 53,
	54, 53, 54, 53, -109, -50, 53, 78, -119, -108,
	-119, -108, -50, -119, -108, -32, 69, -60, -60, -176,
	-35, -110, 95, -115, -34, -124, 103, 176, 137, 174,
	170, 190, 181, 195, 172, 196, -121, -124, 224, -81,
	77, -36, 75, -54, -38, 26, -91, 53, -176, -176,
	-176, 53, 107, -176, -85, -88, -108, -88, -88, -88,
	-117, -108, -85, 231, 56, 54, 53, -131, 23, 24,
	-161, 54, 27, -148, 27, 52, 52, -135, -136, 56,
	-136, 57, 57, -120, -165, -153, 56, 57, 52, 25,
	-60, 107, -176, -176, -131, -131, -131, -141, -131, 164,
	-131, 164, -176, -176, -175, -31, 222, -36, -79, 12,
	27, -71, 32, -2, -175, -108, -108, 53, 54, -176,
	-176, -176, -53, -133, -112, -160, 54, 129, 54, 57,
	54, -137, -137, 54, 54, -88, -175, 95, -136, 231,
	-60, -176, 56, -80, 13, 15, 8, -69, -2, 107,
	-108, -133, -50, 54, 54, -162, -163, 143, -30, 88,
	227, -36, -68, -92, -176, -108, 52, -169, -176, 53,
	-108, -176, 225, 47, 228, -161, -167, -163, 32, 37,
	226, 229, 54, 145, 37, -158, -159, 50, 146, 227,
	-159, 9, 8, -175, 228, -172, 131, 130, 29, 132,
	-172, -60, 142, 229, 65, 28, 133, -176, -176,
}
var yyDef = [...]int{

	0, -2, 2, -2, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	519, 0, 292, 292, 292, 292, 292, 0, 588, 571,
	0, 0, 0, 0, 278, 282, 283, 0, 285, 286,
	773, 773, 773, 773, 773, 0, 31, 32, 771, 1,
	3, 527, 0, 0, 296, 299, 294, 571, 0, 0,
	0, 46, 0, 569, 0, 761, 0, 762, 569, 589,
	590, 592, 593, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 763, 764, 765, 766, 767,
	768, 769, 770, 0, 0, 572, 0, 567, 567, 0,
	567, 0, 253, 363, 596, 597, 761, 762, 0, 0,
	0, 0, 774, 774, 774, 774, 0, 774, 774, 271,
	273, 274, 275, 276, 774, 279, 280, 281, 284, 287,
	288, 289, 290, 291, 25, 531, 0, 0, 519, 27,
	0, 292, 297, 298, 302, 300, 301, 293, 0, 0,
	321, 323, 324, 325, 344, 0, 346, 0, 0, 38,
	42, 0, 555, -2, -2, 0, 0, 594, 595, -2,
	696, -2, 600, 601, 602, 603, 604, 605, 606, 607,
	608, 609, 610, 611, 612, 613, 614, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 682, 683, 684, 685, 686, 687,
	688, 0, 0, 64, 0, 501, 0, -2, -2, 0,
	0, 0, 774, 0, 53, 0, 0, 774, 0, 0,
	0, 0, 0, 0, 252, 0, 254, 774, 774, 774,
	774, 774, 774, 774, 774, 263, 775, 776, 264, 265,
	266, 774, 774, 268, 269, 0, 277, 26, 772, 21,
	0, 0, 528, 371, 0, 376, 378, 0, 413, 414,
	415, 416, 417, 0, 0, 0, 0, 0, 0, 0,
	441, 442, 443, 444, 504, 505, 506, 507, 508, 509,
	510, 511, 380, 381, 501, 0, 551, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 0, 0, 0, 0, 520,
	521, 524, 527, 25, 299, 0, 304, 303, 295, 40,
	0, 362, 0, 0, 0, 0, 0, 0, 351, 0,
	0, 354, 0, 0, 0, 0, 345, 0, 25, 0,
	365, 729, 347, 0, 349, 350, 40, 0, 0, 36,
	37, 0, 43, 0, 155, 562, 563, 564, 560, 0,
	145, 0, 68, 126, 79, 80, 119, 82, 119, 119,
	119, 119, 145, 145, 145, 145, 110, 111, 112, 113,
	114, 0, 0, 97, 119, 119, 119, 101, 83, 84,
	85, 86, 87, 88, 89, 90, 121, 121, 121, 123,
	123, 0, 145, 0, 0, 50, 0, 56, 0, 61,
	0, 229, 0, 248, 568, 774, 0, 774, 364, 598,
	599, 255, 256, 257, 258, 259, 260, 261, 262, 267,
	270, 272, 532, 0, 0, 0, 0, 0, 0, 374,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 399, 400, 401, 402, 403, 404, 377, 0, 391,
	0, 0, 0, 434, 435, 436, 437, 438, 439, 0,
	306, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	302, 0, 493, 0, 457, 0, 458, 459, 460, 461,
	462, 463, 464, 465, 0, 306, 0, 0, 0, 523,
	525, 526, 531, 28, 302, 0, 512, 0, 0, 0,
	305, 0, 0, 361, 369, 552, 0, 322, 340, 342,
	0, 337, 352, 353, 355, 0, 357, 0, 359, 360,
	326, 327, 410, 25, 328, 0, 0, 0, 0, 348,
	369, 369, 39, 556, 557, 558, 0, 47, 63, 199,
	604, 743, 145, 206, 207, 698, 210, 697, 696, 609,
	0, 215, 216, 217, 218, 219, 65, 66, 0, 0,
	730, 0, 0, 709, 741, 0, 192, 193, 67, 128,
	127, 81, 0, 145, 145, 104, 105, 155, 0, 0,
	155, 155, 155, 0, 0, 98, 99, 100, 91, 0,
	121, 93, 94, 95, 0, 96, 502, 0, -2, 48,
	570, 0, 0, 774, 52, 0, 54, 55, 0, 773,
	0, 0, 583, 230, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 0, 247, 249, 774, 251, 0,
	372, 373, 375, 392, 0, 394, 396, 529, 530, 382,
	383, 407, 408, 409, 0, 0, 0, 0, 405, 387,
	0, 418, 419, 420, 421, 422, 424, 425, 426, 427,
	428, 429, 430, 433, 477, 478, 0, 431, 432, 440,
	0, 0, 307, 308, 310, 314, 0, 502, 0, 550,
	0, 0, 0, 0, 0, 0, 499, 496, 0, 0,
	467, 0, 0, 0, 0, 522, 22, 0, 565, 566,
	513, 514, 319, 544, 0, 0, -2, 0, 0, 519,
	0, 0, 0, 334, 341, 0, 0, 335, 0, 336,
	356, 358, -2, 0, 0, 0, 0, 332, 519, 35,
	156, 0, 158, 159, 200, 145, 202, 0, 204, 205,
	208, 209, 211, 146, 0, 148, 0, 212, 213, 214,
	0, 0, 0, 185, 0, 188, 189, 0, 0, 0,
	69, 70, 71, 72, 73, 74, 75, 76, 77, 130,
	0, 0, 0, 144, 0, 161, 163, 0, 78, 129,
	0, 155, 155, 106, 107, 108, 109, 0, 117, 0,
	0, 92, 0, 0, 0, 591, 51, 57, 58, 0,
	62, 222, 773, 0, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 773, 0, 0, 773, 584,
	585, 586, 587, 0, 250, 533, 393, 395, 397, 384,
	405, 388, 0, 385, 0, 0, 379, 445, 0, 0,
	311, 315, 0, 317, 318, 0, 306, 412, 448, 449,
	0, 0, 0, 0, 519, 0, 497, 0, 0, 456,
	468, 469, 470, 471, 23, 369, 0, 29, 0, 544,
	534, 546, 548, 0, 25, 0, 540, 0, 527, 553,
	370, 554, 338, 0, 343, 0, 0, 0, 346, 0,
	527, 157, 201, 203, 147, 149, 150, 0, 152, 154,
	0, 194, 119, 0, 0, 186, 187, 190, 191, 0,
	173, 0, 131, 132, 133, 134, 135, 136, 137, 139,
	140, 0, 160, 162, 164, 120, 102, 103, 145, 0,
	145, 0, 124, 0, 503, 774, 0, 0, 223, 0,
	224, 226, 227, 228, 0, 386, 0, 406, 389, 446,
	309, 316, 312, 0, 0, 0, 119, 119, 482, 119,
	123, 485, 119, 487, 119, 490, 0, 0, 0, 494,
	455, 500, 0, 515, 320, 0, 30, 0, 549, -2,
	0, 0, 0, 41, 33, 0, 330, 0, 0, 0,
	365, 333, 34, 151, 153, 169, 0, 196, 197, 198,
	0, 170, 172, 174, 175, 0, 0, 143, 155, 118,
	155, 0, 0, 49, 59, 60, 220, 221, 0, 0,
	390, 0, 447, 450, 479, 145, 483, 484, 486, 488,
	489, 491, 452, 451, 0, 0, 0, 498, 517, 0,
	0, 547, 0, -2, 0, 542, 541, 0, 339, 366,
	367, 368, 329, 165, 167, 195, 168, 0, 138, 0,
	142, 115, 116, 122, 125, 0, 0, 313, 480, 481,
	472, 454, 495, 24, 0, 0, 0, 537, 25, 0,
	331, 166, 0, 141, 53, 0, 243, 0, 0, 0,
	0, 518, 516, 545, -2, 543, 0, 56, 242, 0,
	0, 453, 0, 0, 0, 0, 225, 244, 0, 473,
	0, 476, 0, 0, 474, 171, 176, 0, 0, 0,
	177, 0, 0, 0, 0, 178, 180, 181, 0, 0,
	179, 0, 0, 475, 182, 184, 183, 245, 246,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 71, 3, 3, 3, 98, 90, 3,
	52, 54, 95, 93, 53, 94, 107, 96, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 232,
	79, 78, 80, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 100, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 89, 3, 101,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 72, 73, 74, 75,
	76, 77, 81, 82, 83, 84, 85, 86, 87, 88,
	91, 92, 97, 99, 102, 103, 104, 105, 106, 108,
	109, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:306
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:311
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:312
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:316
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 21:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:338
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 22:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:346
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].str}
		}
	case 23:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:350
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 24:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:358
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[5].str, SelectExprs: yyDollar[6].selectExprs, From: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:364
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 26:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:368
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:374
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 28:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:378
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 29:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:385
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 30:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:397
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:409
		{
			yyVAL.str = InsertStr
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:413
		{
			yyVAL.str = ReplaceStr
		}
	case 33:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:419
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), TableExprs: yyDollar[3].tableExprs, Exprs: yyDollar[5].updateExprs, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 34:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:425
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 35:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:429
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:434
		{
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:435
		{
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:439
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:443
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:448
		{
			yyVAL.partitions = nil
		}
	case 41:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:452
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:458
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 43:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:462
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[4].setExprs}
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:468
		{
			yyVAL.str = SessionStr
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:472
		{
			yyVAL.str = GlobalStr
		}
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:478
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			yyVAL.statement = yyDollar[1].ddl
		}
	case 47:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:483
		{
			yyVAL.statement = yyDollar[1].ddl
			yyDollar[1].ddl.Table = yyDollar[4].tableName
			yyDollar[1].ddl.LikeTable = yyDollar[4].tableName
		}
	case 48:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:489
		{
			yyVAL.statement = &DDL{Action: CreateDatabaseStr, Table: TableName{Qualifier: TableIdent{string(yyDollar[4].bytes)}}, TableSpec: &TableSpec{Option: yyDollar[5].TableOption}}
		}
	case 49:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:493
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, NewName: yyDollar[7].tableName}
		}
	case 50:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:498
		{
			yyVAL.statement = &DDL{Action: CreateStr, NewName: yyDollar[3].tableName.ToViewName()}
		}
	case 51:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:502
		{
			yyVAL.statement = &DDL{Action: CreateStr, NewName: yyDollar[5].tableName.ToViewName()}
		}
	case 52:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:506
		{
			yyVAL.statement = &DDL{Action: CreateVindexStr, VindexSpec: &VindexSpec{
				Name:   yyDollar[3].colIdent,
				Type:   yyDollar[4].colIdent,
				Params: yyDollar[5].vindexParams,
			}}
		}
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:515
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 54:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:519
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:525
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:530
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:535
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:541
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:546
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:552
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:558
		{
			yyVAL.ddl = &DDL{Action: CreateTableStr, NewName: yyDollar[4].tableName}
			setDDL(yylex, yyVAL.ddl)
		}
	case 62:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:563
		{
			yyVAL.ddl = &DDL{Action: CreateTableStr, NewName: yyDollar[4].tableName, Table: yyDollar[6].tableName, LikeTable: yyDollar[6].tableName}
			setDDL(yylex, yyVAL.ddl)
		}
	case 63:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:570
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Option = yyDollar[4].TableOption
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:577
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:582
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:586
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:592
		{

			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colName.Name, Type: yyDollar[2].columnType, options: yyDollar[3].columnOptions}
			yyVAL.columnDefinition.mergeOptions()
		}
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:599
		{
			yyVAL.columnOptions = []columnOption{}
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:603
		{
			yyVAL.columnOptions = append(yyDollar[1].columnOptions, yyDollar[2].columnOption)
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:609
		{
			yyVAL.columnOption = columnOption{key: "null_opt", value: yyDollar[1].boolVal}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:613
		{
			yyVAL.columnOption = columnOption{key: "column_default_opt", value: yyDollar[1].optVal}
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:617
		{
			yyVAL.columnOption = columnOption{key: "on_update_opt", value: yyDollar[1].optVal}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:621
		{
			yyVAL.columnOption = columnOption{key: "auto_increment_opt", value: yyDollar[1].boolVal}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:625
		{
			yyVAL.columnOption = columnOption{key: "column_key_opt", value: yyDollar[1].colKeyOpt}
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:629
		{
			yyVAL.columnOption = columnOption{key: "column_comment_opt", value: yyDollar[1].optVal}
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:633
		{
			yyVAL.columnOption = columnOption{key: "charset_opt", value: yyDollar[1].str}
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:637
		{
			yyVAL.columnOption = columnOption{key: "collate_opt", value: yyDollar[1].str}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:646
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:656
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].optVal
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:661
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:667
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:671
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:675
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:679
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:683
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:687
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:691
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:695
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:701
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:707
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:713
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:719
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:725
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:731
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:739
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:743
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:747
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:751
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:755
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:761
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:765
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:769
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:773
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:777
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:781
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:785
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:789
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:793
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:797
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:801
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:805
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:809
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 115:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:813
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:818
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:824
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:829
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:834
		{
			yyVAL.optVal = nil
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:838
		{
			yyVAL.optVal = NewIntVal(yyDollar[2].bytes)
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:843
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 122:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:847
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:855
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:859
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 125:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:865
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 126:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:873
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:877
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 128:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:882
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:886
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:893
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:897
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:903
		{
			yyVAL.optVal = NewStrVal(yyDollar[2].bytes)
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:907
		{
			yyVAL.optVal = NewIntVal(yyDollar[2].bytes)
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:911
		{
			yyVAL.optVal = NewFloatVal(yyDollar[2].bytes)
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:915
		{
			yyVAL.optVal = NewValArg(yyDollar[2].bytes)
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:919
		{
			yyVAL.optVal = yyDollar[2].optVal
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:923
		{
			yyVAL.optVal = NewValArg(yyDollar[2].bytes)
		}
	case 138:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:927
		{
			yyVAL.optVal = NewValArg(yyDollar[2].bytes)
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:931
		{
			yyVAL.optVal = NewBitVal(yyDollar[2].bytes)
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:937
		{
			yyVAL.optVal = NewValArg(yyDollar[1].bytes)
		}
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:941
		{
			yyVAL.optVal = NewValArg(yyDollar[1].bytes)
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:945
		{
			yyVAL.optVal = NewValArg(yyDollar[1].bytes)
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:953
		{
			yyVAL.optVal = yyDollar[3].optVal
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:959
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:964
		{
			yyVAL.str = ""
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:968
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:972
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:976
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:980
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:984
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:988
		{
			yyVAL.str = string(yyDollar[4].bytes)
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:992
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:996
		{
			yyVAL.str = string(yyDollar[4].bytes)
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1000
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 155:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1005
		{
			yyVAL.str = ""
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1009
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1013
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1017
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1021
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1027
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1031
		{
			yyVAL.colKeyOpt = colKey
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1035
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1039
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1045
		{
			yyVAL.optVal = NewStrVal(yyDollar[2].bytes)
		}
	case 165:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1051
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 166:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1055
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Using: yyDollar[5].colIdent}
		}
	case 167:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1059
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Using: yyDollar[5].colIdent}
		}
	case 168:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1063
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[4].indexColumns, Using: yyDollar[2].colIdent}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1067
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1071
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 171:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1075
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
			yyVAL.indexDefinition.ReferencesTable = yyDollar[6].tableName
			yyVAL.indexDefinition.ReferencesColumns = yyDollar[8].indexColumns
			yyVAL.indexDefinition.ReferencesOption = yyDollar[10].ForeignOption

		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1086
		{
			yyVAL.indexInfo = &IndexInfo{Type: "PRIMARY", Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true}
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1090
		{
			yyVAL.indexInfo = &IndexInfo{Type: "UNIQUE", Name: NewColIdent(string(yyDollar[2].bytes)), Unique: true}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1094
		{
			yyVAL.indexInfo = &IndexInfo{Type: "UNIQUE", Name: NewColIdent(string(yyDollar[2].bytes)), Unique: true}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1098
		{
			yyVAL.indexInfo = &IndexInfo{Type: "FOREIGN", Name: NewColIdent(string(yyDollar[2].bytes)), Foreign: true}
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1106
		{
			yyVAL.ForeignOption = yyDollar[1].ForeignOption
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1110
		{
			yyVAL.ForeignOption = yyDollar[1].ForeignOption.Merge(yyDollar[2].ForeignOption)
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1117
		{
			yyVAL.ForeignOption = ForeignOption{OnUpdate: yyDollar[3].bytes}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1121
		{
			yyVAL.ForeignOption = ForeignOption{OnDelete: yyDollar[3].bytes}
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1128
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1132
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1136
		{
			yyVAL.bytes = append(append(yyDollar[1].bytes, ' '), yyDollar[2].bytes...)
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1140
		{
			yyVAL.bytes = append(append(yyDollar[1].bytes, ' '), yyDollar[2].bytes...)
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1144
		{
			yyVAL.bytes = append(append(yyDollar[1].bytes, ' '), yyDollar[2].bytes...)
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1154
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1158
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1162
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(string(yyDollar[3].bytes)), Unique: true}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1166
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Unique: true}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1170
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(string(yyDollar[2].bytes)), Unique: false}
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1174
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].str), Name: NewColIdent(string(yyDollar[3].bytes)), Unique: false}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1178
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].str), Name: NewColIdent(string(yyDollar[3].bytes)), Unique: false}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1185
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1189
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1195
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1199
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1205
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].optVal}
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1209
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent}
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1213
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent}
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1219
		{
			yyVAL.TableOption = yyDollar[1].TableOption
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1223
		{
			yyVAL.TableOption = yyDollar[1].TableOption.Merge(yyDollar[2].TableOption)
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1227
		{
			yyVAL.TableOption = yyDollar[1].TableOption.Merge(yyDollar[3].TableOption)
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1236
		{
			yyVAL.TableOption = TableOption{AutoIncrement: IntegerPtr(yyDollar[2].bytes)}

		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1241
		{
			yyVAL.TableOption = TableOption{AutoIncrement: IntegerPtr(yyDollar[3].bytes)}
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1245
		{
			yyVAL.TableOption = TableOption{Engine: yyDollar[2].bytes}
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1249
		{
			yyVAL.TableOption = TableOption{Charset: []byte(yyDollar[2].str)}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1253
		{
			yyVAL.TableOption = TableOption{Charset: []byte(yyDollar[1].str)}
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1257
		{
			yyVAL.TableOption = TableOption{Collate: []byte(yyDollar[1].str)}
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1261
		{
			yyVAL.TableOption = TableOption{Collate: []byte(yyDollar[2].str)}
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1265
		{
			yyVAL.TableOption = TableOption{Comment: yyDollar[2].bytes}
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1269
		{
			yyVAL.TableOption = TableOption{Common: yyDollar[1].bytes}
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1273
		{
			yyVAL.TableOption = TableOption{Common: append(append(yyDollar[1].bytes, '='), yyDollar[2].bytes...)}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1279
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1283
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1287
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1291
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1295
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1299
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1303
		{
			yyVAL.bytes = []byte(yyDollar[1].str)
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1310
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1314
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1318
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 222:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1324
		{
			yyVAL.statement = &DDL{Action: AlterTableStr, Table: yyDollar[4].tableName, NewName: yyDollar[4].tableName}
		}
	case 223:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1328
		{
			yyVAL.statement = &DDL{Action: AlterTableStr, Table: yyDollar[4].tableName, NewName: yyDollar[4].tableName}
		}
	case 224:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1332
		{
			yyVAL.statement = &DDL{Action: AlterTableStr, Table: yyDollar[4].tableName, NewName: yyDollar[4].tableName}
		}
	case 225:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1336
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 226:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1349
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 227:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1359
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: AlterTableStr, Table: yyDollar[4].tableName, NewName: yyDollar[7].tableName}
		}
	case 228:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1364
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterTableStr, Table: yyDollar[4].tableName, NewName: yyDollar[4].tableName}
		}
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1369
		{
			yyVAL.statement = &DDL{Action: AlterTableStr, Table: yyDollar[3].tableName.ToViewName(), NewName: yyDollar[3].tableName.ToViewName()}
		}
	case 230:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1373
		{
			yyVAL.statement = &DDL{Action: AlterTableStr, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 242:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1392
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1398
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1402
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 245:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1408
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 246:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1412
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 247:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1418
		{
			yyVAL.statement = &DDL{Action: RenameStr, Table: yyDollar[3].tableName, NewName: yyDollar[5].tableName}
		}
	case 248:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1424
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropTableStr, Table: yyDollar[4].tableName, IfExists: exists}
		}
	case 249:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1432
		{
			yyVAL.statement = &DDL{Action: DropDatabaseStr, Table: TableName{Qualifier: TableIdent{string(yyDollar[4].bytes)}}}
		}
	case 250:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1436
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterTableStr, Table: yyDollar[5].tableName, NewName: yyDollar[5].tableName}
		}
	case 251:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1441
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropViewStr, Table: yyDollar[4].tableName.ToViewName(), IfExists: exists}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1451
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1455
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1460
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName, NewName: yyDollar[3].tableName}
		}
	case 255:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1466
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1470
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1474
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1479
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1483
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1487
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1491
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 262:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1495
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1499
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1503
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1507
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1511
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1515
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1519
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1523
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1527
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1531
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1535
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), OnTable: yyDollar[4].tableName}
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1539
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1543
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1547
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1551
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1561
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1567
		{
			yyVAL.str = ""
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1571
		{
			yyVAL.str = SessionStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1575
		{
			yyVAL.str = GlobalStr
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1581
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1585
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1591
		{
			yyVAL.statement = &Begin{}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1595
		{
			yyVAL.statement = &Begin{}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1601
		{
			yyVAL.statement = &Commit{}
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1607
		{
			yyVAL.statement = &Rollback{}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1613
		{
			yyVAL.statement = &OtherRead{}
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1617
		{
			yyVAL.statement = &OtherRead{}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1621
		{
			yyVAL.statement = &OtherRead{}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1625
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1629
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1634
		{
			setAllowComments(yylex, true)
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1638
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1644
		{
			yyVAL.bytes2 = nil
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1648
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.str = UnionStr
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1658
		{
			yyVAL.str = UnionAllStr
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1662
		{
			yyVAL.str = UnionDistinctStr
		}
	case 299:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1667
		{
			yyVAL.str = ""
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1675
		{
			yyVAL.str = SQLCacheStr
		}
	case 302:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1680
		{
			yyVAL.str = ""
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1684
		{
			yyVAL.str = DistinctStr
		}
	case 304:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1689
		{
			yyVAL.str = ""
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1693
		{
			yyVAL.str = StraightJoinHint
		}
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1698
		{
			yyVAL.selectExprs = nil
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1702
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1708
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1712
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1718
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1722
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1726
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 313:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1730
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1735
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1739
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1743
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1750
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1755
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1759
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1765
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1769
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1779
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1783
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1787
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1793
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 329:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1797
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1807
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1817
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 334:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1830
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 335:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1834
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1838
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1842
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1848
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 339:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1850
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1854
		{
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1856
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1860
		{
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1862
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1865
		{
			yyVAL.empty = struct{}{}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.empty = struct{}{}
		}
	case 346:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1870
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1874
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1878
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.str = JoinStr
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1895
		{
			yyVAL.str = JoinStr
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1899
		{
			yyVAL.str = JoinStr
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1905
		{
			yyVAL.str = StraightJoinStr
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1911
		{
			yyVAL.str = LeftJoinStr
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1915
		{
			yyVAL.str = LeftJoinStr
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1919
		{
			yyVAL.str = RightJoinStr
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1923
		{
			yyVAL.str = RightJoinStr
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1929
		{
			yyVAL.str = NaturalJoinStr
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1933
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1943
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1947
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1953
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1957
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1962
		{
			yyVAL.indexHints = nil
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1966
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1970
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1974
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1979
		{
			yyVAL.expr = nil
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1983
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1989
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1993
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1997
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2001
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2005
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2009
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2013
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2019
		{
			yyVAL.str = ""
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2023
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2033
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2039
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2043
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2047
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2051
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 386:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2055
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2059
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2063
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2067
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 390:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2071
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2075
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2081
		{
			yyVAL.str = IsNullStr
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2085
		{
			yyVAL.str = IsNotNullStr
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2089
		{
			yyVAL.str = IsTrueStr
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2093
		{
			yyVAL.str = IsNotTrueStr
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2097
		{
			yyVAL.str = IsFalseStr
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2101
		{
			yyVAL.str = IsNotFalseStr
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2107
		{
			yyVAL.str = EqualStr
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2111
		{
			yyVAL.str = LessThanStr
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2115
		{
			yyVAL.str = GreaterThanStr
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2119
		{
			yyVAL.str = LessEqualStr
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2123
		{
			yyVAL.str = GreaterEqualStr
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2127
		{
			yyVAL.str = NotEqualStr
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2131
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2136
		{
			yyVAL.expr = nil
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2140
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2146
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2150
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2154
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2160
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2166
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2170
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2176
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2180
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2184
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2188
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2192
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2196
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2200
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2204
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2208
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2212
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2216
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: NewIntVal(yyDollar[2].bytes)}
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2220
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2224
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2228
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2232
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2236
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2240
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2244
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2248
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2252
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2256
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2260
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2264
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2268
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2276
		{
			fmt.Printf("vvvvvvvvvvvvvv\n")
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2291
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2295
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2299
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2317
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 446:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2321
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 447:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2325
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2335
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2339
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 450:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2343
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 451:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2347
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 452:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2351
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 453:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2355
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 454:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2359
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 455:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2363
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2367
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colIdent}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2377
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2381
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2385
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2389
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2394
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2398
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("now")}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2403
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2408
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2413
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2427
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2431
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2435
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2439
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2445
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2449
		{
			yyVAL.str = BooleanModeStr
		}
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2453
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 475:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2457
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2461
		{
			yyVAL.str = QueryExpansionStr
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2467
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2471
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2477
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2481
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2485
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal, Charset: string(yyDollar[3].bytes)}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2489
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2493
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2497
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2503
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2507
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2511
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2515
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2519
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2523
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2527
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2532
		{
			yyVAL.expr = nil
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2536
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2541
		{
			yyVAL.str = string("")
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2545
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2551
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2555
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2561
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2566
		{
			yyVAL.expr = nil
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2570
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2576
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2580
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2584
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2590
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2594
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2598
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2602
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2606
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2610
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2614
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2618
		{
			yyVAL.expr = &NullVal{}
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2624
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2633
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2637
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2642
		{
			yyVAL.exprs = nil
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2646
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2651
		{
			yyVAL.expr = nil
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2655
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2660
		{
			yyVAL.orderBy = nil
		}
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2664
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2670
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2674
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2680
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2685
		{
			yyVAL.str = AscScr
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2689
		{
			yyVAL.str = AscScr
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2693
		{
			yyVAL.str = DescScr
		}
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2698
		{
			yyVAL.limit = nil
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2702
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 529:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2706
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2710
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2715
		{
			yyVAL.str = ""
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2719
		{
			yyVAL.str = ForUpdateStr
		}
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2723
		{
			yyVAL.str = ShareModeStr
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2736
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2740
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2744
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2749
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2753
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 539:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2757
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2764
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2768
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2772
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 543:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2776
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2781
		{
			yyVAL.updateExprs = nil
		}
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2785
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2791
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2795
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2801
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2805
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2811
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2817
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2827
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2831
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2837
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2843
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2847
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2853
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: yyDollar[3].expr}
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2857
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2864
		{
			yyVAL.bytes = []byte("charset")
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2871
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2875
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2879
		{
			yyVAL.expr = &Default{}
		}
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2888
		{
			yyVAL.byt = 0
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2890
		{
			yyVAL.byt = 1
		}
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2893
		{
			yyVAL.empty = struct{}{}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2895
		{
			yyVAL.empty = struct{}{}
		}
	case 571:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2898
		{
			yyVAL.str = ""
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2900
		{
			yyVAL.str = IgnoreStr
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2904
		{
			yyVAL.empty = struct{}{}
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2906
		{
			yyVAL.empty = struct{}{}
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2908
		{
			yyVAL.empty = struct{}{}
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2910
		{
			yyVAL.empty = struct{}{}
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2912
		{
			yyVAL.empty = struct{}{}
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2914
		{
			yyVAL.empty = struct{}{}
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2916
		{
			yyVAL.empty = struct{}{}
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2918
		{
			yyVAL.empty = struct{}{}
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2920
		{
			yyVAL.empty = struct{}{}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2922
		{
			yyVAL.empty = struct{}{}
		}
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2925
		{
			yyVAL.empty = struct{}{}
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2927
		{
			yyVAL.empty = struct{}{}
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2929
		{
			yyVAL.empty = struct{}{}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2933
		{
			yyVAL.empty = struct{}{}
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2935
		{
			yyVAL.empty = struct{}{}
		}
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2938
		{
			yyVAL.empty = struct{}{}
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2940
		{
			yyVAL.empty = struct{}{}
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2942
		{
			yyVAL.empty = struct{}{}
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2946
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2950
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2954
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2961
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2967
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2971
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2977
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2981
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3178
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3187
		{
			decNesting(yylex)
		}
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3192
		{
			forceEOF(yylex)
		}
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3197
		{
			forceEOF(yylex)
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3201
		{
			forceEOF(yylex)
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3205
		{
			forceEOF(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
